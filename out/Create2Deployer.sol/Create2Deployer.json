{"abi":[{"type":"function","name":"deploy","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deploymentAddress","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"deployed","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"generateSaltWithSender","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"data","type":"bytes12","internalType":"bytes12"}],"outputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"getCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"error","name":"Create2Deployer_AlreadyDeployed","inputs":[{"name":"deployed","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"Create2Deployer_MismatchedDeploymentAddress","inputs":[{"name":"expected","type":"address","internalType":"address"},{"name":"actual","type":"address","internalType":"address"}]},{"type":"error","name":"Create2Deployer_UnauthorizedSender","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]}],"bytecode":{"object":"0x608060405234801561001057600080fd5b506103f8806100206000396000f3fe60806040526004361061003f5760003560e01c80630e5ee1c81461004457806385bb39231461007f5780639f9dc2f4146100bf578063cdcb760a146100f7575b600080fd5b34801561005057600080fd5b5061006c61005f36600461028b565b60a01c60609190911b1790565b6040519081526020015b60405180910390f35b34801561008b57600080fd5b506100af61009a3660046102cf565b60006020819052908152604090205460ff1681565b6040519015158152602001610076565b3480156100cb57600080fd5b506100df6100da366004610307565b61010a565b6040516001600160a01b039091168152602001610076565b6100df610105366004610307565b610166565b8051602091820120604080516001600160f81b0319818501523060601b6bffffffffffffffffffffffff191660218201526035810194909452605580850192909252805180850390920182526075909301909252815191012090565b6000606083901c331461019a57604051635e0b304d60e01b8152336004820152602481018490526044015b60405180910390fd5b60006101a6848461010a565b6001600160a01b03811660009081526020819052604090205490915060ff16156101f557604051633184d13d60e21b81526001600160a01b038216600482015260248101859052604401610191565b6001600160a01b038116600090815260208181526040909120805460ff1916600117905583518591850134f59150806001600160a01b0316826001600160a01b0316146102685760405163a3d95bc160e01b81526001600160a01b03808316600483015283166024820152604401610191565b5092915050565b80356001600160a01b038116811461028657600080fd5b919050565b6000806040838503121561029e57600080fd5b6102a78361026f565b915060208301356001600160a01b0319811681146102c457600080fd5b809150509250929050565b6000602082840312156102e157600080fd5b6102ea8261026f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561031a57600080fd5b82359150602083013567ffffffffffffffff8082111561033957600080fd5b818501915085601f83011261034d57600080fd5b81358181111561035f5761035f6102f1565b604051601f8201601f19908116603f01168101908382118183101715610387576103876102f1565b816040528281528860208487010111156103a057600080fd5b826020860160208301376000602084830101528095505050505050925092905056fea26469706673582212201232f720bc0ef2dc4446e087b2ea9b715a0e9ffa4afd25cc0b0293914f36f58464736f6c63430008160033","sourceMap":"522:4089:111:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061003f5760003560e01c80630e5ee1c81461004457806385bb39231461007f5780639f9dc2f4146100bf578063cdcb760a146100f7575b600080fd5b34801561005057600080fd5b5061006c61005f36600461028b565b60a01c60609190911b1790565b6040519081526020015b60405180910390f35b34801561008b57600080fd5b506100af61009a3660046102cf565b60006020819052908152604090205460ff1681565b6040519015158152602001610076565b3480156100cb57600080fd5b506100df6100da366004610307565b61010a565b6040516001600160a01b039091168152602001610076565b6100df610105366004610307565b610166565b8051602091820120604080516001600160f81b0319818501523060601b6bffffffffffffffffffffffff191660218201526035810194909452605580850192909252805180850390920182526075909301909252815191012090565b6000606083901c331461019a57604051635e0b304d60e01b8152336004820152602481018490526044015b60405180910390fd5b60006101a6848461010a565b6001600160a01b03811660009081526020819052604090205490915060ff16156101f557604051633184d13d60e21b81526001600160a01b038216600482015260248101859052604401610191565b6001600160a01b038116600090815260208181526040909120805460ff1916600117905583518591850134f59150806001600160a01b0316826001600160a01b0316146102685760405163a3d95bc160e01b81526001600160a01b03808316600483015283166024820152604401610191565b5092915050565b80356001600160a01b038116811461028657600080fd5b919050565b6000806040838503121561029e57600080fd5b6102a78361026f565b915060208301356001600160a01b0319811681146102c457600080fd5b809150509250929050565b6000602082840312156102e157600080fd5b6102ea8261026f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561031a57600080fd5b82359150602083013567ffffffffffffffff8082111561033957600080fd5b818501915085601f83011261034d57600080fd5b81358181111561035f5761035f6102f1565b604051601f8201601f19908116603f01168101908382118183101715610387576103876102f1565b816040528281528860208487010111156103a057600080fd5b826020860160208301376000602084830101528095505050505050925092905056fea26469706673582212201232f720bc0ef2dc4446e087b2ea9b715a0e9ffa4afd25cc0b0293914f36f58464736f6c63430008160033","sourceMap":"522:4089:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4145:464;;;;;;;;;;-1:-1:-1;4145:464:111;;;;;:::i;:::-;4568:4;4564:15;4470:4;4466:17;;;;4387:206;;4145:464;;;;720:25:156;;;708:2;693:18;4145:464:111;;;;;;;;611:40;;;;;;;;;;-1:-1:-1;611:40:111;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1112:14:156;;1105:22;1087:41;;1075:2;1060:18;611:40:111;947:187:156;3236:390:111;;;;;;;;;;-1:-1:-1;3236:390:111;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2429:32:156;;;2411:51;;2399:2;2384:18;3236:390:111;2265:203:156;1329:1538:111;;;;;;:::i;:::-;;:::i;3236:390::-;3493:19;;;;;;;3443:70;;;-1:-1:-1;;;;;;3443:70:111;;;2684:39:156;3480:4:111;2760:2:156;2756:15;-1:-1:-1;;2752:53:156;2739:11;;;2732:74;2822:12;;;2815:28;;;;2859:12;;;;2852:28;;;;3443:70:111;;;;;;;;;;2896:12:156;;;;3443:70:111;;;3420:103;;;;;;3236:390::o;1329:1538::-;1430:25;1523:22;;;;1549:10;1523:36;1519:133;;1582:59;;-1:-1:-1;;;1582:59:111;;1624:10;1582:59;;;3093:51:156;3160:18;;;3153:34;;;3066:18;;1582:59:111;;;;;;;;1519:133;1727:31;1761:33;1779:4;1785:8;1761:17;:33::i;:::-;-1:-1:-1;;;;;1894:33:111;;:8;:33;;;;;;;;;;;1727:67;;-1:-1:-1;1894:33:111;;1890:140;;;1950:69;;-1:-1:-1;;;1950:69:111;;-1:-1:-1;;;;;3111:32:156;;1950:69:111;;;3093:51:156;3160:18;;;3153:34;;;3066:18;;1950:69:111;2919:274:156;1890:140:111;-1:-1:-1;;;;;2103:33:111;;:8;:33;;;;;;;;;;;:40;;-1:-1:-1;;2103:40:111;2139:4;2103:40;;;2448:15;;2519:4;;2369:19;;2305:11;2230:307;2209:328;;2664:23;-1:-1:-1;;;;;2643:44:111;:17;-1:-1:-1;;;;;2643:44:111;;2639:222;;2710:140;;-1:-1:-1;;;2710:140:111;;-1:-1:-1;;;;;3428:15:156;;;2710:140:111;;;3410:34:156;3480:15;;3460:18;;;3453:43;3345:18;;2710:140:111;3198:304:156;2639:222:111;1457:1410;1329:1538;;;;:::o;14:173:156:-;82:20;;-1:-1:-1;;;;;131:31:156;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:377::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;-1:-1:-1;439:2:156;424:18;;411:32;-1:-1:-1;;;;;;472:48:156;;462:59;;452:87;;535:1;532;525:12;452:87;558:5;548:15;;;192:377;;;;;:::o;756:186::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;907:29;926:9;907:29;:::i;:::-;897:39;756:186;-1:-1:-1;;;756:186:156:o;1139:127::-;1200:10;1195:3;1191:20;1188:1;1181:31;1231:4;1228:1;1221:15;1255:4;1252:1;1245:15;1271:989;1348:6;1356;1409:2;1397:9;1388:7;1384:23;1380:32;1377:52;;;1425:1;1422;1415:12;1377:52;1461:9;1448:23;1438:33;;1522:2;1511:9;1507:18;1494:32;1545:18;1586:2;1578:6;1575:14;1572:34;;;1602:1;1599;1592:12;1572:34;1640:6;1629:9;1625:22;1615:32;;1685:7;1678:4;1674:2;1670:13;1666:27;1656:55;;1707:1;1704;1697:12;1656:55;1743:2;1730:16;1765:2;1761;1758:10;1755:36;;;1771:18;;:::i;:::-;1846:2;1840:9;1814:2;1900:13;;-1:-1:-1;;1896:22:156;;;1920:2;1892:31;1888:40;1876:53;;;1944:18;;;1964:22;;;1941:46;1938:72;;;1990:18;;:::i;:::-;2030:10;2026:2;2019:22;2065:2;2057:6;2050:18;2105:7;2100:2;2095;2091;2087:11;2083:20;2080:33;2077:53;;;2126:1;2123;2116:12;2077:53;2182:2;2177;2173;2169:11;2164:2;2156:6;2152:15;2139:46;2227:1;2222:2;2217;2209:6;2205:15;2201:24;2194:35;2248:6;2238:16;;;;;;;1271:989;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"deploy(bytes32,bytes)":"cdcb760a","deployed(address)":"85bb3923","generateSaltWithSender(address,bytes12)":"0e5ee1c8","getCreate2Address(bytes32,bytes)":"9f9dc2f4"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployed\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"Create2Deployer_AlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"Create2Deployer_MismatchedDeploymentAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"Create2Deployer_UnauthorizedSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deploymentAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deployed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"data\",\"type\":\"bytes12\"}],\"name\":\"generateSaltWithSender\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"Create2Deployer_AlreadyDeployed(address,bytes32)\":[{\"details\":\"Thrown when deployment has already been made at the address.\",\"params\":{\"deployed\":\"Address of the already deployed contract.\",\"salt\":\"Salt used to generated the address.\"}}],\"Create2Deployer_MismatchedDeploymentAddress(address,address)\":[{\"details\":\"Thrown when deployment address and actual deployment address did not match.\",\"params\":{\"actual\":\"Actual deployment address of the contract.\",\"expected\":\"Expected deployment address based on the salt provided.\"}}],\"Create2Deployer_UnauthorizedSender(address,bytes32)\":[{\"details\":\"Thrown when the salt does not begin with the sender.\",\"params\":{\"salt\":\"Salt used to create the deployment.\",\"sender\":\"Address of the account initiating the deployment.\"}}]},\"kind\":\"dev\",\"methods\":{\"deploy(bytes32,bytes)\":{\"params\":{\"initCode\":\"The init code of the contract to deploy.\",\"salt\":\"A unique value which must contain the address of the sender.\"},\"returns\":{\"deploymentAddress\":\"The addres of the deployed contract.\"}},\"generateSaltWithSender(address,bytes12)\":{\"params\":{\"data\":\"The added data to make the salt unique.\",\"sender\":\"The address of the deployer.\"}},\"getCreate2Address(bytes32,bytes)\":{\"params\":{\"initCode\":\"The init code of the contract to deploy.\",\"salt\":\"A unique value which must contain the address of the sender.\"},\"returns\":{\"_0\":\"The address that would be generated from the deployment.\"}}},\"title\":\"Create2Deployer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(bytes32,bytes)\":{\"notice\":\"Deploys a contract using the given salt and init code. Prevents         frontrunning of claiming a specific address by asserting that the first         20 bytes of the salt matches the sender. This check is especially useful         if trying to keep the same deployment addresses across chains.\"},\"generateSaltWithSender(address,bytes12)\":{\"notice\":\"Allows the generation of a salt using the sender address.         This function ties the deployment sendder to the salt of the CREATE2         address so that it cannot be frontrun on a different chain. More details         about this can be found here:         https://github.com/martinetlee/create2-snippets#method-1-mixing-with-salt\"},\"getCreate2Address(bytes32,bytes)\":{\"notice\":\"Calculate the target address for contract deployment using the         salt and init code.\"}},\"notice\":\"Deployment contract that uses the init code and a salt to perform a deployment.         There is added cross-chain safety as well because a particular salt can only be         used if the sender's address is contained within that salt. This prevents a         contract on one chain from being deployed by a non-admin account on         another chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Create2Deployer.sol\":\"Create2Deployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@merkle-generator/=lib/merkle-proof-generator/src/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/\",\":@safe-contracts/=lib/safe-contracts/contracts/\",\":@scripts/=scripts/\",\":@seaport-core/=lib/seaport-core/src/\",\":@seaport-sol/=lib/seaport-sol/src/\",\":@seaport-types/=lib/seaport-types/src/\",\":@solady/=lib/Solady/src/\",\":@src/=src/\",\":@test/=test/\",\":Solady/=lib/Solady/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/seaport-sol/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":seaport-core/=lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/seaport-sol/lib/solady/\",\":solarray/=lib/seaport-sol/lib/solarray/src/\",\":solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/\"]},\"sources\":{\"lib/seaport-types/src/helpers/PointerLibraries.sol\":{\"keccak256\":\"0xf9106392d8616040b61748bce0ff35856c4a3eba5eb5eb269eaeb97747fe40e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://046f05ce4d4428d3ca6264ab03e1b6cee5751776f02cc87d66d11ee479a42992\",\"dweb:/ipfs/Qme5bKudPZWxH4DYDLQE2sD23xNVbQH4NjrL6pBacv54FD\"]},\"lib/seaport-types/src/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0xeb0de4edbad252c3227c59b66721978316202c4d31c5370a8669c4051984e345\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00451d1ceb616b7cccf0e4be073483d5c99fcc205fe6a1056ce35b8703be16e3\",\"dweb:/ipfs/QmbeoxgRcgwK18Vw1G1mVAFKMnYYT2oQp1idfazNicwncq\"]},\"lib/seaport-types/src/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0x05bc9ccb74c9fb4d073c9adc36da28a5a0ab961886fcd4a681ccb8d7eb74e0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://911be5f248b2ad47a24ca9949f4b8114db5432c7f2769650c0f3e4ea6bb0b17b\",\"dweb:/ipfs/QmdNmqhwc1UMxbCPXqe9FDua7negVWSGU5cPAWSbUTnKDV\"]},\"src/Create2Deployer.sol\":{\"keccak256\":\"0x704bdea17859e83b3c3d2d25503873af33043eb9b1a18f941855a59b37b05530\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5dc1ecacc37bce5fd17a07297ddf0ce6adf7ff5bb7837179c7e4492447dac127\",\"dweb:/ipfs/QmZwi3Pm7dX9iJ3aSsGpPWSvNGNVraF2CMYRk9Pv3ofPkJ\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x10a935101a50809bf658c42ea9976e810ff595c76fcf46bcfe3d3996bc6fc087\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5d7c39cec7b2ec96be73a0f988de5fd11dac5fd8f88238b1530d31ef45c5edc8\",\"dweb:/ipfs/QmfA1er3b3aaPa4w2WAcnhwXLLCxEc1K6izDPmNqi2T7XG\"]},\"src/libraries/RentalStructs.sol\":{\"keccak256\":\"0x1749156ee39095eb4a3e88a0c1e566895463da2d13db7082f3c904f86bf42a4c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://49c96cbb0a32ca8322dd2058b968ec8851f93832a6e37a4ea2872bb749e6a89a\",\"dweb:/ipfs/QmX2yQvmVzSL1RAkDQ2n9tSnTRBhDz1Fkk5c9mGoegcQYf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"deployed","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"type":"error","name":"Create2Deployer_AlreadyDeployed"},{"inputs":[{"internalType":"address","name":"expected","type":"address"},{"internalType":"address","name":"actual","type":"address"}],"type":"error","name":"Create2Deployer_MismatchedDeploymentAddress"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"type":"error","name":"Create2Deployer_UnauthorizedSender"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"initCode","type":"bytes"}],"stateMutability":"payable","type":"function","name":"deploy","outputs":[{"internalType":"address","name":"deploymentAddress","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"deployed","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes12","name":"data","type":"bytes12"}],"stateMutability":"pure","type":"function","name":"generateSaltWithSender","outputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"initCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"deploy(bytes32,bytes)":{"params":{"initCode":"The init code of the contract to deploy.","salt":"A unique value which must contain the address of the sender."},"returns":{"deploymentAddress":"The addres of the deployed contract."}},"generateSaltWithSender(address,bytes12)":{"params":{"data":"The added data to make the salt unique.","sender":"The address of the deployer."}},"getCreate2Address(bytes32,bytes)":{"params":{"initCode":"The init code of the contract to deploy.","salt":"A unique value which must contain the address of the sender."},"returns":{"_0":"The address that would be generated from the deployment."}}},"version":1},"userdoc":{"kind":"user","methods":{"deploy(bytes32,bytes)":{"notice":"Deploys a contract using the given salt and init code. Prevents         frontrunning of claiming a specific address by asserting that the first         20 bytes of the salt matches the sender. This check is especially useful         if trying to keep the same deployment addresses across chains."},"generateSaltWithSender(address,bytes12)":{"notice":"Allows the generation of a salt using the sender address.         This function ties the deployment sendder to the salt of the CREATE2         address so that it cannot be frontrun on a different chain. More details         about this can be found here:         https://github.com/martinetlee/create2-snippets#method-1-mixing-with-salt"},"getCreate2Address(bytes32,bytes)":{"notice":"Calculate the target address for contract deployment using the         salt and init code."}},"version":1}},"settings":{"remappings":["@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@merkle-generator/=lib/merkle-proof-generator/src/","@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/","@safe-contracts/=lib/safe-contracts/contracts/","@scripts/=scripts/","@seaport-core/=lib/seaport-core/src/","@seaport-sol/=lib/seaport-sol/src/","@seaport-types/=lib/seaport-types/src/","@solady/=lib/Solady/src/","@src/=src/","@test/=test/","Solady/=lib/Solady/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/seaport-sol/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","safe-contracts/=lib/safe-contracts/","seaport-core/=lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/seaport-sol/lib/solady/","solarray/=lib/seaport-sol/lib/solarray/src/","solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/Create2Deployer.sol":"Create2Deployer"},"evmVersion":"paris","libraries":{}},"sources":{"lib/seaport-types/src/helpers/PointerLibraries.sol":{"keccak256":"0xf9106392d8616040b61748bce0ff35856c4a3eba5eb5eb269eaeb97747fe40e7","urls":["bzz-raw://046f05ce4d4428d3ca6264ab03e1b6cee5751776f02cc87d66d11ee479a42992","dweb:/ipfs/Qme5bKudPZWxH4DYDLQE2sD23xNVbQH4NjrL6pBacv54FD"],"license":"MIT"},"lib/seaport-types/src/lib/ConsiderationEnums.sol":{"keccak256":"0xeb0de4edbad252c3227c59b66721978316202c4d31c5370a8669c4051984e345","urls":["bzz-raw://00451d1ceb616b7cccf0e4be073483d5c99fcc205fe6a1056ce35b8703be16e3","dweb:/ipfs/QmbeoxgRcgwK18Vw1G1mVAFKMnYYT2oQp1idfazNicwncq"],"license":"MIT"},"lib/seaport-types/src/lib/ConsiderationStructs.sol":{"keccak256":"0x05bc9ccb74c9fb4d073c9adc36da28a5a0ab961886fcd4a681ccb8d7eb74e0ed","urls":["bzz-raw://911be5f248b2ad47a24ca9949f4b8114db5432c7f2769650c0f3e4ea6bb0b17b","dweb:/ipfs/QmdNmqhwc1UMxbCPXqe9FDua7negVWSGU5cPAWSbUTnKDV"],"license":"MIT"},"src/Create2Deployer.sol":{"keccak256":"0x704bdea17859e83b3c3d2d25503873af33043eb9b1a18f941855a59b37b05530","urls":["bzz-raw://5dc1ecacc37bce5fd17a07297ddf0ce6adf7ff5bb7837179c7e4492447dac127","dweb:/ipfs/QmZwi3Pm7dX9iJ3aSsGpPWSvNGNVraF2CMYRk9Pv3ofPkJ"],"license":"BUSL-1.1"},"src/libraries/Errors.sol":{"keccak256":"0x10a935101a50809bf658c42ea9976e810ff595c76fcf46bcfe3d3996bc6fc087","urls":["bzz-raw://5d7c39cec7b2ec96be73a0f988de5fd11dac5fd8f88238b1530d31ef45c5edc8","dweb:/ipfs/QmfA1er3b3aaPa4w2WAcnhwXLLCxEc1K6izDPmNqi2T7XG"],"license":"BUSL-1.1"},"src/libraries/RentalStructs.sol":{"keccak256":"0x1749156ee39095eb4a3e88a0c1e566895463da2d13db7082f3c904f86bf42a4c","urls":["bzz-raw://49c96cbb0a32ca8322dd2058b968ec8851f93832a6e37a4ea2872bb749e6a89a","dweb:/ipfs/QmX2yQvmVzSL1RAkDQ2n9tSnTRBhDz1Fkk5c9mGoegcQYf"],"license":"BUSL-1.1"}},"version":1},"id":111}