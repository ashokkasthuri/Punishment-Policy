{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"execute","inputs":[{"name":"transfers","type":"tuple[]","internalType":"struct ConduitTransfer[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ConduitItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"magicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"executeBatch1155","inputs":[{"name":"batchTransfers","type":"tuple[]","internalType":"struct ConduitBatch1155Transfer[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[{"name":"magicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"executeWithBatch1155","inputs":[{"name":"standardTransfers","type":"tuple[]","internalType":"struct ConduitTransfer[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ConduitItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"batchTransfers","type":"tuple[]","internalType":"struct ConduitBatch1155Transfer[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[{"name":"magicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateChannel","inputs":[{"name":"channel","type":"address","internalType":"address"},{"name":"isOpen","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ChannelUpdated","inputs":[{"name":"channel","type":"address","indexed":true,"internalType":"address"},{"name":"open","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"error","name":"BadReturnValueFromERC20OnTransfer","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ChannelClosed","inputs":[{"name":"channel","type":"address","internalType":"address"}]},{"type":"error","name":"ChannelStatusAlreadySet","inputs":[{"name":"channel","type":"address","internalType":"address"},{"name":"isOpen","type":"bool","internalType":"bool"}]},{"type":"error","name":"ERC1155BatchTransferGenericFailure","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"identifiers","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}]},{"type":"error","name":"Invalid1155BatchTransferEncoding","inputs":[]},{"type":"error","name":"InvalidController","inputs":[]},{"type":"error","name":"InvalidERC721TransferAmount","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidItemType","inputs":[]},{"type":"error","name":"MissingItemAmount","inputs":[]},{"type":"error","name":"NoContract","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"TokenTransferGenericFailure","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"UnusedItemParameters","inputs":[]}],"bytecode":{"object":"0x60a060405234801561001057600080fd5b5033608052608051610a9e61003060003960006101e90152610a9e6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce34aa214610051578063899e104c146100815780638df25d9214610094578063c4e8fcb5146100a7575b600080fd5b61006461005f366004610878565b6100bc565b6040516001600160e01b0319909116815260200160405180910390f35b61006461008f3660046108ff565b61012b565b6100646100a236600461096b565b61019b565b6100ba6100b53660046109bd565b6101de565b005b60003360005260006020526040600020546100e6576349ed56f960e11b6000523360045260246000fd5b8160005b8181101561011a57610112858583818110610107576101076109f9565b905060c002016102dd565b6001016100ea565b50632671a55160e11b949350505050565b6000336000526000602052604060002054610155576349ed56f960e11b6000523360045260246000fd5b8360005b8181101561017e57610176878783818110610107576101076109f9565b600101610159565b50610189848461044f565b50632267841360e21b95945050505050565b60003360005260006020526040600020546101c5576349ed56f960e11b6000523360045260246000fd5b6101cf838361044f565b506346f92ec960e11b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610227576040516336abb4df60e11b815260040160405180910390fd5b6001600160a01b03821660009081526020819052604090205481151560ff909116151503610280576040516349271a0f60e11b81526001600160a01b038316600482015281151560248201526044015b60405180910390fd5b6001600160a01b03821660008181526020818152604091829020805460ff191685151590811790915591519182527fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2910160405180910390a25050565b60016102ec6020830183610a25565b60038111156102fd576102fd610a0f565b036103425761033f6103156040830160208401610a4d565b6103256060840160408501610a4d565b6103356080850160608601610a4d565b8460a00135610590565b50565b60026103516020830183610a25565b600381111561036257610362610a0f565b036103cf578060a00135600114610392576040516369f9582760e01b815260a08201356004820152602401610277565b61033f6103a56040830160208401610a4d565b6103b56060840160408501610a4d565b6103c56080850160608601610a4d565b846080013561068f565b60036103de6020830183610a25565b60038111156103ef576103ef610a0f565b036104365761033f6104076040830160208401610a4d565b6104176060840160408501610a4d565b6104276080850160608601610a4d565b84608001358560a0013561074c565b604051631e4cbc7f60e21b815260040160405180910390fd5b808280631759616b60e11b60205260005b8381101561058357823582018035803b61048657635f15d672600052806020526024601cfd5b60a08201358060051b60c0018060808501351460a0606086013514168185013583141615905080156104c357633ae8821360e21b60005260046000fd5b506020860195506080602084016024378060061b60400190508060a00160a45260008160c401528060c4018160a0850160c4376000808260206000875af1935083610574573d1561055257601f3d0160051c91508060051c826003028184111561053a578184036003028280028580020360091c01015b5a60208201101561054f573d6000803e3d6000fd5b50505b6357e222f160e11b6000528260045260c0606452608451602001608452806000fd5b50505050600181019050610460565b5050505060806040525050565b6040516323b872dd60e01b600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661067f5780873b15151661067f578061066d578161064f573d1561062c57601f3d0160051c8360051c8160030281831115610613578183036003028280028480020360091c01015b5a602082011015610628573d6000803e3d6000fd5b5050505b63f486bc8760005286602052856040528460605260006080528360a05260a4601cfd5b6398891923600052866020528560405284606052836080526084601cfd5b635f15d672600052866020526024601cfd5b5050604052505060006060525050565b833b6106a757635f15d672600052836020526024601cfd5b6040516323b872dd60e01b6000528360045282602452816044526000806064600080895af18061073d573d1561071a57601f3d0160051c8260051c8160030281831115610701578183036003028280028480020360091c01015b5a602082011015610716573d6000803e3d6000fd5b5050505b63f486bc8760005285602052846040528360605282608052600160a05260a4601cfd5b50604052505060006060525050565b843b61076457635f15d672600052846020526024601cfd5b60405160805160a05160c051637921219560e11b6000528760045286602452856044528460645260a0608452600060a45260008060c46000808d5af180610810573d156107ee57601f3d0160051c8560051c81600302818311156107d5578183036003028280028480020360091c01015b5a6020820110156107ea573d6000803e3d6000fd5b5050505b63f486bc87600052896020528860405287606052866080528560a05260a4601cfd5b5060809290925260a05260c05260405250506000606052505050565b60008083601f84011261083e57600080fd5b50813567ffffffffffffffff81111561085657600080fd5b60208301915083602060c08302850101111561087157600080fd5b9250929050565b6000806020838503121561088b57600080fd5b823567ffffffffffffffff8111156108a257600080fd5b6108ae8582860161082c565b90969095509350505050565b60008083601f8401126108cc57600080fd5b50813567ffffffffffffffff8111156108e457600080fd5b6020830191508360208260051b850101111561087157600080fd5b6000806000806040858703121561091557600080fd5b843567ffffffffffffffff8082111561092d57600080fd5b6109398883890161082c565b9096509450602087013591508082111561095257600080fd5b5061095f878288016108ba565b95989497509550505050565b6000806020838503121561097e57600080fd5b823567ffffffffffffffff81111561099557600080fd5b6108ae858286016108ba565b80356001600160a01b03811681146109b857600080fd5b919050565b600080604083850312156109d057600080fd5b6109d9836109a1565b9150602083013580151581146109ee57600080fd5b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600060208284031215610a3757600080fd5b813560048110610a4657600080fd5b9392505050565b600060208284031215610a5f57600080fd5b610a46826109a156fea2646970667358221220278e205f124df19d7f1cc98e6bff82245f2bb56d09f3bd6a3a08ee2bc21d95c364736f6c63430008160033","sourceMap":"1341:9129:61:-:0;;;3149:102;;;;;;;;;-1:-1:-1;3234:10:61;3220:24;;1341:9129;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce34aa214610051578063899e104c146100815780638df25d9214610094578063c4e8fcb5146100a7575b600080fd5b61006461005f366004610878565b6100bc565b6040516001600160e01b0319909116815260200160405180910390f35b61006461008f3660046108ff565b61012b565b6100646100a236600461096b565b61019b565b6100ba6100b53660046109bd565b6101de565b005b60003360005260006020526040600020546100e6576349ed56f960e11b6000523360045260246000fd5b8160005b8181101561011a57610112858583818110610107576101076109f9565b905060c002016102dd565b6001016100ea565b50632671a55160e11b949350505050565b6000336000526000602052604060002054610155576349ed56f960e11b6000523360045260246000fd5b8360005b8181101561017e57610176878783818110610107576101076109f9565b600101610159565b50610189848461044f565b50632267841360e21b95945050505050565b60003360005260006020526040600020546101c5576349ed56f960e11b6000523360045260246000fd5b6101cf838361044f565b506346f92ec960e11b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610227576040516336abb4df60e11b815260040160405180910390fd5b6001600160a01b03821660009081526020819052604090205481151560ff909116151503610280576040516349271a0f60e11b81526001600160a01b038316600482015281151560248201526044015b60405180910390fd5b6001600160a01b03821660008181526020818152604091829020805460ff191685151590811790915591519182527fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2910160405180910390a25050565b60016102ec6020830183610a25565b60038111156102fd576102fd610a0f565b036103425761033f6103156040830160208401610a4d565b6103256060840160408501610a4d565b6103356080850160608601610a4d565b8460a00135610590565b50565b60026103516020830183610a25565b600381111561036257610362610a0f565b036103cf578060a00135600114610392576040516369f9582760e01b815260a08201356004820152602401610277565b61033f6103a56040830160208401610a4d565b6103b56060840160408501610a4d565b6103c56080850160608601610a4d565b846080013561068f565b60036103de6020830183610a25565b60038111156103ef576103ef610a0f565b036104365761033f6104076040830160208401610a4d565b6104176060840160408501610a4d565b6104276080850160608601610a4d565b84608001358560a0013561074c565b604051631e4cbc7f60e21b815260040160405180910390fd5b808280631759616b60e11b60205260005b8381101561058357823582018035803b61048657635f15d672600052806020526024601cfd5b60a08201358060051b60c0018060808501351460a0606086013514168185013583141615905080156104c357633ae8821360e21b60005260046000fd5b506020860195506080602084016024378060061b60400190508060a00160a45260008160c401528060c4018160a0850160c4376000808260206000875af1935083610574573d1561055257601f3d0160051c91508060051c826003028184111561053a578184036003028280028580020360091c01015b5a60208201101561054f573d6000803e3d6000fd5b50505b6357e222f160e11b6000528260045260c0606452608451602001608452806000fd5b50505050600181019050610460565b5050505060806040525050565b6040516323b872dd60e01b600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661067f5780873b15151661067f578061066d578161064f573d1561062c57601f3d0160051c8360051c8160030281831115610613578183036003028280028480020360091c01015b5a602082011015610628573d6000803e3d6000fd5b5050505b63f486bc8760005286602052856040528460605260006080528360a05260a4601cfd5b6398891923600052866020528560405284606052836080526084601cfd5b635f15d672600052866020526024601cfd5b5050604052505060006060525050565b833b6106a757635f15d672600052836020526024601cfd5b6040516323b872dd60e01b6000528360045282602452816044526000806064600080895af18061073d573d1561071a57601f3d0160051c8260051c8160030281831115610701578183036003028280028480020360091c01015b5a602082011015610716573d6000803e3d6000fd5b5050505b63f486bc8760005285602052846040528360605282608052600160a05260a4601cfd5b50604052505060006060525050565b843b61076457635f15d672600052846020526024601cfd5b60405160805160a05160c051637921219560e11b6000528760045286602452856044528460645260a0608452600060a45260008060c46000808d5af180610810573d156107ee57601f3d0160051c8560051c81600302818311156107d5578183036003028280028480020360091c01015b5a6020820110156107ea573d6000803e3d6000fd5b5050505b63f486bc87600052896020528860405287606052866080528560a05260a4601cfd5b5060809290925260a05260c05260405250506000606052505050565b60008083601f84011261083e57600080fd5b50813567ffffffffffffffff81111561085657600080fd5b60208301915083602060c08302850101111561087157600080fd5b9250929050565b6000806020838503121561088b57600080fd5b823567ffffffffffffffff8111156108a257600080fd5b6108ae8582860161082c565b90969095509350505050565b60008083601f8401126108cc57600080fd5b50813567ffffffffffffffff8111156108e457600080fd5b6020830191508360208260051b850101111561087157600080fd5b6000806000806040858703121561091557600080fd5b843567ffffffffffffffff8082111561092d57600080fd5b6109398883890161082c565b9096509450602087013591508082111561095257600080fd5b5061095f878288016108ba565b95989497509550505050565b6000806020838503121561097e57600080fd5b823567ffffffffffffffff81111561099557600080fd5b6108ae858286016108ba565b80356001600160a01b03811681146109b857600080fd5b919050565b600080604083850312156109d057600080fd5b6109d9836109a1565b9150602083013580151581146109ee57600080fd5b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600060208284031215610a3757600080fd5b813560048110610a4657600080fd5b9392505050565b600060208284031215610a5f57600080fd5b610a46826109a156fea2646970667358221220278e205f124df19d7f1cc98e6bff82245f2bb56d09f3bd6a3a08ee2bc21d95c364736f6c63430008160033","sourceMap":"1341:9129:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4000:773;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1077:33:156;;;1059:52;;1047:2;1032:18;4000:773:61;;;;;;;6959:1131;;;;;;:::i;:::-;;:::i;5534:504::-;;;;;;:::i;:::-;;:::i;8323:603::-;;;;;;:::i;:::-;;:::i;:::-;;4000:773;4130:17;1958:8;1934:22;1927:40;2079:14;2058:19;2051:43;2283:17;2259:22;2249:52;2243:59;2233:750;;-1:-1:-1;;;2475:23:61;2468:62;2639:8;2612:25;2605:43;2942:26;2917:23;2910:59;2233:750;4270:9;4237:30:::1;4336:308;4360:22;4356:1;:26;4336:308;;;4474:23;4484:9;;4494:1;4484:12;;;;;;;:::i;:::-;;;;;;4474:9;:23::i;:::-;4616:3;;4336:308;;;-1:-1:-1::0;;;;4745:21:61;4000:773;-1:-1:-1;;;;4000:773:61:o;6959:1131::-;7152:17;1958:8;1934:22;1927:40;2079:14;2058:19;2051:43;2283:17;2259:22;2249:52;2243:59;2233:750;;-1:-1:-1;;;2475:23:61;2468:62;2639:8;2612:25;2605:43;2942:26;2917:23;2910:59;2233:750;7288:17;7255:30:::1;7371:316;7395:22;7391:1;:26;7371:316;;;7509:31;7519:17;;7537:1;7519:20;;;;;;;:::i;7509:31::-;7659:3;;7371:316;;;;7902:45;7932:14;;7902:29;:45::i;:::-;-1:-1:-1::0;;;;8049:34:61;6959:1131;-1:-1:-1;;;;;6959:1131:61:o;5534:504::-;5687:17;1958:8;1934:22;1927:40;2079:14;2058:19;2051:43;2283:17;2259:22;2249:52;2243:59;2233:750;;-1:-1:-1;;;2475:23:61;2468:62;2639:8;2612:25;2605:43;2942:26;2917:23;2910:59;2233:750;5854:45:::1;5884:14;;5854:29;:45::i;:::-;-1:-1:-1::0;;;;6001:30:61;5534:504;-1:-1:-1;;5534:504:61:o;8323:603::-;8478:10;-1:-1:-1;;;;;8492:11:61;8478:25;;8474:82;;8526:19;;-1:-1:-1;;;8526:19:61;;;;;;;;;;;8474:82;-1:-1:-1;;;;;8649:18:61;;:9;:18;;;;;;;;;;;:28;;;:18;;;;:28;;;8645:106;;8700:40;;-1:-1:-1;;;8700:40:61;;-1:-1:-1;;;;;3811:32:156;;8700:40:61;;;3793:51:156;3887:14;;3880:22;3860:18;;;3853:50;3766:18;;8700:40:61;;;;;;;;8645:106;-1:-1:-1;;;;;8806:18:61;;:9;:18;;;;;;;;;;;;:27;;-1:-1:-1;;8806:27:61;;;;;;;;;;8888:31;;4054:41:156;;;8888:31:61;;4027:18:156;8888:31:61;;;;;;;8323:603;;:::o;9232:1236::-;9398:21;9381:13;;;;:4;:13;:::i;:::-;:38;;;;;;;;:::i;:::-;;9377:1085;;9722:66;9744:10;;;;;;;;:::i;:::-;9756:9;;;;;;;;:::i;:::-;9767:7;;;;;;;;:::i;:::-;9776:4;:11;;;9722:21;:66::i;:::-;9232:1236;:::o;9377:1085::-;9826:22;9809:13;;;;:4;:13;:::i;:::-;:39;;;;;;;;:::i;:::-;;9805:657;;9938:4;:11;;;9953:1;9938:16;9934:102;;9981:40;;-1:-1:-1;;;9981:40:61;;10009:11;;;;9981:40;;;4857:25:156;4830:18;;9981:40:61;4711:177:156;9934:102:61;10088:71;10111:10;;;;;;;;:::i;:::-;10123:9;;;;;;;;:::i;:::-;10134:7;;;;;;;;:::i;:::-;10143:4;:15;;;10088:22;:71::i;9805:657::-;10197:23;10180:13;;;;:4;:13;:::i;:::-;:40;;;;;;;;:::i;:::-;;10176:286;;10275:85;10299:10;;;;;;;;:::i;:::-;10311:9;;;;;;;;:::i;:::-;10322:7;;;;;;;;:::i;:::-;10331:4;:15;;;10348:4;:11;;;10275:23;:85::i;10176:286::-;10434:17;;-1:-1:-1;;;10434:17:61;;;;;;;;;;;25519:10334:81;25734:21;26021;26301:18;-1:-1:-1;;;26500:36:81;26493:85;26656:1;26641:8807;26666:3;26663:1;26660:10;26641:8807;;;26976:18;26963:32;26949:12;26945:51;27093:10;27080:24;27197:5;27185:18;27175:466;;27310:25;27307:1;27300:36;27394:5;27364:28;27357:43;27599:23;27568:29;27561:62;27175:466;27762:42;27750:10;27746:59;27733:73;28019:9;28005:12;28001:28;27949:50;27945:85;28931:21;28851:40;28839:10;28835:57;28822:71;28782:204;28598:42;28518:40;28506:10;28502:57;28489:71;28449:225;28358:658;28304:21;28292:10;28288:38;28275:52;28264:9;28261:67;28168:874;28136:928;28093:971;;29155:15;29152:471;;;-1:-1:-1;;;29273:36:81;29266:87;29565:39;29527:36;29520:85;29152:471;;29751:7;29731:18;29727:32;29705:54;;30014:41;29955:36;29943:10;29939:53;29890:27;29856:217;30306:9;30291:13;30287:29;30277:8;30273:44;30248:69;;30536:17;30493:41;30489:65;30430:37;30402:170;30737:1;30717:17;30672:43;30668:67;30661:78;30907:17;30864:41;30860:65;31197:17;31132:42;31120:10;31116:59;31056:38;31022:210;31658:1;31631;31550:16;31465:36;31438:1;31407:5;31376;31346:335;31311:370;;31754:7;31744:3690;;31917:16;31914:2608;;;32330:14;32312:16;32308:37;32294:12;32290:56;32267:79;;33003:16;32989:12;32985:35;33148:15;33135:11;33131:33;33285:10;33268:15;33265:31;33262:662;;;33499:32;;;33533:11;33495:50;33756:27;;;33717:37;;;33713:71;33636:31;33587:239;33450:414;33367:531;33262:662;34184:5;34167:14;34161:4;34157:25;34154:36;34151:349;;;34320:16;34317:1;34314;34299:38;34457:16;34454:1;34447:27;34151:349;;;31914:2608;-1:-1:-1;;;34599:1:81;34592:61;34768:5;34722:44;34715:59;34898:45;34860:36;34853:91;35144:40;35138:47;35129:7;35125:61;35059:40;35027:181;35399:16;35396:1;35389:27;31744:3690;;;;;26685:1;26682;26678:9;26673:14;;26641:8807;;;26645:14;;;;35812:24;35789:21;35782:55;25519:10334;;:::o;4268:8607::-;4656:21;4650:28;-1:-1:-1;;;4776:26:81;4769:64;4882:4;4853:27;4846:41;4934:2;4907:25;4900:37;4988:6;4957:29;4950:45;5569:7;5566:1;5539:25;5511:26;5508:1;5501:5;5494;5489:88;6032:10;5992:16;5985:24;5979:2;5961:16;5958:24;5954:1;5950;5944:8;5941:15;5937:46;5934:76;5702:358;6421:16;6414:24;6407:32;6398:7;6394:46;6384:6284;;6742:7;6732:5;6720:18;6713:26;6706:34;6702:48;6692:5756;;6831:7;6821:5109;;6930:10;6920:3932;;7120:16;7117:2692;;;7612:14;7594:16;7590:37;7576:12;7572:56;7995:10;7981:12;7977:29;8150:15;8137:11;8133:33;8303:10;8286:15;8283:31;8280:758;;;8557:32;;;8591:11;8553:50;8838:27;;;8799:37;;;8795:71;8710:31;8653:263;8500:462;8401:603;8280:758;9330:5;9313:14;9307:4;9303:25;9300:36;9297:482;;;9528:16;9525:1;9522;9507:38;9728:16;9725:1;9718:27;9297:482;;;;7117:2692;9930:42;9927:1;9920:53;10054:5;10009:43;10002:58;10140:4;10096:42;10089:56;10223:2;10181:40;10174:52;10310:1;10262:46;10255:57;10394:6;10348:44;10341:60;10785:40;10754:29;10747:79;6920:3932;11116:48;11113:1;11106:59;11248:5;11197:49;11190:64;11336:4;11286:48;11279:62;11421:2;11373:46;11366:58;11508:6;11456:50;11449:66;11861:46;11830:29;11823:85;6821:5109;12116:25;12113:1;12106:36;12200:5;12170:28;12163:43;12406:23;12375:29;12368:62;6692:5756;-1:-1:-1;;12746:21:81;12739:41;-1:-1:-1;;12857:1:81;12847:8;12840:19;-1:-1:-1;;4268:8607:81:o;13479:4903::-;13760:5;13748:18;13738:445;;13876:25;13873:1;13866:36;13956:5;13926:28;13919:43;14145:23;14114:29;14107:62;13738:445;14381:21;14375:28;-1:-1:-1;;;14498:27:81;14491:66;14607:4;14577:28;14570:42;14660:2;14632:26;14625:38;14711:10;14683:26;14676:46;14888:1;14885;14857:26;14828:27;14825:1;14818:5;14811;14806:84;14955:7;14945:3230;;15106:16;15103:2114;;;15497:14;15479:16;15475:37;15461:12;15457:56;15797:10;15783:12;15779:29;15928:15;15915:11;15911:33;16057:10;16040:15;16037:31;16034:614;;;16251:32;;;16285:11;16247:50;16496:27;;;16457:37;;;16453:71;16380:31;16335:227;16206:390;16131:495;16034:614;16892:5;16875:14;16869:4;16865:25;16862:36;16859:340;;;17027:16;17024:1;17021;17006:38;17160:16;17157:1;17150:27;16859:340;;;;15103:2114;17391:42;17388:1;17381:53;17503:5;17458:43;17451:58;17577:4;17533:42;17526:56;17648:2;17606:40;17599:52;17725:10;17675:48;17668:68;17806:1;17760:44;17753:55;18120:40;18089:29;18082:79;14945:3230;-1:-1:-1;18253:21:81;18246:41;-1:-1:-1;;18364:1:81;18354:8;18347:19;-1:-1:-1;;13479:4903:81:o;19030:5538::-;19341:5;19329:18;19319:445;;19457:25;19454:1;19447:36;19537:5;19507:28;19500:43;19726:23;19695:29;19688:62;19319:445;19956:21;19950:28;20013:8;20007:15;20057:8;20051:15;20101:8;20095:15;-1:-1:-1;;;20209:32:81;20202:76;20333:4;20298:33;20291:47;20391:2;20358:31;20351:43;20447:10;20414:31;20407:51;20515:6;20478:35;20471:51;20584:43;20542:40;20535:93;20690:1;20648:40;20641:51;20884:1;20881;20848:31;20814:32;20811:1;20804:5;20797;20792:94;20951:7;20941:3236;;21102:16;21099:2114;;;21493:14;21475:16;21471:37;21457:12;21453:56;21793:10;21779:12;21775:29;21924:15;21911:11;21907:33;22053:10;22036:15;22033:31;22030:614;;;22247:32;;;22281:11;22243:50;22492:27;;;22453:37;;;22449:71;22376:31;22331:227;22202:390;22127:495;22030:614;22888:5;22871:14;22865:4;22861:25;22858:36;22855:340;;;23023:16;23020:1;23017;23002:38;23156:16;23153:1;23146:27;22855:340;;;;21099:2114;23388:42;23385:1;23378:53;23500:5;23455:43;23448:58;23574:4;23530:42;23523:56;23645:2;23603:40;23596:52;23722:10;23672:48;23665:68;23803:6;23757:44;23750:60;24122:40;24091:29;24084:79;20941:3236;-1:-1:-1;24198:8:81;24191:26;;;;24259:8;24252:26;24320:8;24313:26;24439:21;24432:41;-1:-1:-1;;24550:1:81;-1:-1:-1;24533:19:81;-1:-1:-1;;;19030:5538:81:o;14:394:156:-;101:8;111:6;165:3;158:4;150:6;146:17;142:27;132:55;;183:1;180;173:12;132:55;-1:-1:-1;206:20:156;;249:18;238:30;;235:50;;;281:1;278;271:12;235:50;318:4;310:6;306:17;294:29;;381:3;374:4;366;358:6;354:17;346:6;342:30;338:41;335:50;332:70;;;398:1;395;388:12;332:70;14:394;;;;;:::o;413:497::-;535:6;543;596:2;584:9;575:7;571:23;567:32;564:52;;;612:1;609;602:12;564:52;652:9;639:23;685:18;677:6;674:30;671:50;;;717:1;714;707:12;671:50;756:94;842:7;833:6;822:9;818:22;756:94;:::i;:::-;869:8;;730:120;;-1:-1:-1;413:497:156;-1:-1:-1;;;;413:497:156:o;1122:400::-;1218:8;1228:6;1282:3;1275:4;1267:6;1263:17;1259:27;1249:55;;1300:1;1297;1290:12;1249:55;-1:-1:-1;1323:20:156;;1366:18;1355:30;;1352:50;;;1398:1;1395;1388:12;1352:50;1435:4;1427:6;1423:17;1411:29;;1495:3;1488:4;1478:6;1475:1;1471:14;1463:6;1459:27;1455:38;1452:47;1449:67;;;1512:1;1509;1502:12;1527:911;1730:6;1738;1746;1754;1807:2;1795:9;1786:7;1782:23;1778:32;1775:52;;;1823:1;1820;1813:12;1775:52;1863:9;1850:23;1892:18;1933:2;1925:6;1922:14;1919:34;;;1949:1;1946;1939:12;1919:34;1988:94;2074:7;2065:6;2054:9;2050:22;1988:94;:::i;:::-;2101:8;;-1:-1:-1;1962:120:156;-1:-1:-1;2189:2:156;2174:18;;2161:32;;-1:-1:-1;2205:16:156;;;2202:36;;;2234:1;2231;2224:12;2202:36;;2273:105;2370:7;2359:8;2348:9;2344:24;2273:105;:::i;:::-;1527:911;;;;-1:-1:-1;2397:8:156;-1:-1:-1;;;;1527:911:156:o;2443:515::-;2574:6;2582;2635:2;2623:9;2614:7;2610:23;2606:32;2603:52;;;2651:1;2648;2641:12;2603:52;2691:9;2678:23;2724:18;2716:6;2713:30;2710:50;;;2756:1;2753;2746:12;2710:50;2795:103;2890:7;2881:6;2870:9;2866:22;2795:103;:::i;2963:173::-;3031:20;;-1:-1:-1;;;;;3080:31:156;;3070:42;;3060:70;;3126:1;3123;3116:12;3060:70;2963:173;;;:::o;3141:347::-;3206:6;3214;3267:2;3255:9;3246:7;3242:23;3238:32;3235:52;;;3283:1;3280;3273:12;3235:52;3306:29;3325:9;3306:29;:::i;:::-;3296:39;;3385:2;3374:9;3370:18;3357:32;3432:5;3425:13;3418:21;3411:5;3408:32;3398:60;;3454:1;3451;3444:12;3398:60;3477:5;3467:15;;;3141:347;;;;;:::o;3493:127::-;3554:10;3549:3;3545:20;3542:1;3535:31;3585:4;3582:1;3575:15;3609:4;3606:1;3599:15;4106:127;4167:10;4162:3;4158:20;4155:1;4148:31;4198:4;4195:1;4188:15;4222:4;4219:1;4212:15;4238:277;4318:6;4371:2;4359:9;4350:7;4346:23;4342:32;4339:52;;;4387:1;4384;4377:12;4339:52;4426:9;4413:23;4465:1;4458:5;4455:12;4445:40;;4481:1;4478;4471:12;4445:40;4504:5;4238:277;-1:-1:-1;;;4238:277:156:o;4520:186::-;4579:6;4632:2;4620:9;4611:7;4607:23;4603:32;4600:52;;;4648:1;4645;4638:12;4600:52;4671:29;4690:9;4671:29;:::i","linkReferences":{},"immutableReferences":{"46477":[{"start":489,"length":32}]}},"methodIdentifiers":{"execute((uint8,address,address,address,uint256,uint256)[])":"4ce34aa2","executeBatch1155((address,address,address,uint256[],uint256[])[])":"8df25d92","executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])":"899e104c","updateChannel(address,bool)":"c4e8fcb5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"ChannelStatusAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ChannelClosed(address)\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ChannelStatusAlreadySet(address,bool)\":[{\"details\":\"Revert with an error when attempting to update a channel to the      current status of that channel.\"}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidERC721TransferAmount(uint256)\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\",\"params\":{\"amount\":\"The amount of the ERC721 tokens to transfer.\"}}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"events\":{\"ChannelUpdated(address,bool)\":{\"details\":\"Emit an event whenever a channel is opened or closed.\",\"params\":{\"channel\":\"The channel that has been updated.\",\"open\":\"A boolean indicating whether the conduit is open or not.\"}}},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch item transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the item transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch item transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 item transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the item transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"Conduit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"In the constructor, set the deployer as the controller.\"},\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single ERC20/721/1155 item         transfers as well as batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"This contract serves as an originator for \\\"proxied\\\" transfers. Each         conduit is deployed and controlled by a \\\"conduit controller\\\" that can         add and remove \\\"channels\\\" or contracts that can instruct the conduit         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each         conduit has an owner that can arbitrarily add or remove channels, and         a malicious or negligent owner can add a channel that allows for any         approved ERC20/721/1155 tokens to be taken immediately \\u2014 be extremely         cautious with what conduits you give token approvals to!*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/seaport-core/src/conduit/Conduit.sol\":\"Conduit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@merkle-generator/=lib/merkle-proof-generator/src/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/\",\":@safe-contracts/=lib/safe-contracts/contracts/\",\":@scripts/=scripts/\",\":@seaport-core/=lib/seaport-core/src/\",\":@seaport-sol/=lib/seaport-sol/src/\",\":@seaport-types/=lib/seaport-types/src/\",\":@solady/=lib/Solady/src/\",\":@src/=src/\",\":@test/=test/\",\":Solady/=lib/Solady/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/seaport-sol/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":seaport-core/=lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/seaport-sol/lib/solady/\",\":solarray/=lib/seaport-sol/lib/solarray/src/\",\":solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/\"]},\"sources\":{\"lib/seaport-core/src/conduit/Conduit.sol\":{\"keccak256\":\"0xec1cd6b6a0552c9d2a236fe1df562dc6795f2a35067120979ef299b13928ed75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d6255a857de2e49b15c01896f6e2b81c2bc8cae3d14562e3c8d42fb7949a098\",\"dweb:/ipfs/QmWLg6NE5gEEAPJR7UW21fzSFycapTSCEXdCr45FFuMr7q\"]},\"lib/seaport-core/src/lib/TokenTransferrer.sol\":{\"keccak256\":\"0x02822d391094cc733a1215a9dcca933099592d4902e327832e7a4ddbfe910df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7951093d038b3577c66febf10be0435b2c2093df55b03827406e130880dfa96b\",\"dweb:/ipfs/QmbjnYUwHbgU7jrbuLakh9FSkGcPNAxzH3TTRUoUEEFZdo\"]},\"lib/seaport-types/src/conduit/lib/ConduitConstants.sol\":{\"keccak256\":\"0xf9d1a7d4c805e3851ddc7fb9329dab68745cd38833f20b473799f86df97b5c23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aa922f6e11d22005f4d61edc338b29177dae0fc50f86de226eca31969c1aa48\",\"dweb:/ipfs/QmT3gFEuLEZ4DYsAuhg4QVyG2iWLGmuT9cyreHYWnN7CfX\"]},\"lib/seaport-types/src/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x1b24e84bbd29d52cebcb0bda26c8095c9d7a8e5719dd1b0e203315be0df4dcf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://901be0c9ea392a69611b884985a772547e83ce78610a40e989216d842c8eb4b0\",\"dweb:/ipfs/QmPW1kDrkUEAvF6gy5FHsVmXNe2C1czAovXKL18T5jKiVx\"]},\"lib/seaport-types/src/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xe765c83ddb65b13547db2914f7212689707fcd85c1bbe5c49dbe3e98c4942dd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1318c90a615b9c2098c1f7435925c76913d2c54b79a53f8f64eae59d60ed5564\",\"dweb:/ipfs/QmXkTSAvkrMbrNLJjehm3JXeBoyW6dDYWRsdFkuDVb33sa\"]},\"lib/seaport-types/src/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0x5710e503e7550594cf98bade51646da1420d09c1b4758315484810df72d7cf64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3831fc9b36ce3760c39f60682487848f9678157794b995207f15d93ca1cc58a\",\"dweb:/ipfs/QmaapZB4DdYhUSkjySHJk9n7ajEfmX1hwWXWwEHAixYPQQ\"]},\"lib/seaport-types/src/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0x9ba38397a8b8e3c7d1119138ef452d1b801bdcf594699ba51a6b2858045b55e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40919b9dfed2d2562ba8101bfc5e5333241dff9fc323b1cdb3d60a67820ebba4\",\"dweb:/ipfs/QmQTyJF7pkKpY1p3vrVpkQASbC8uYWKaEUMtRc5Y6UKZam\"]},\"lib/seaport-types/src/lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0x0782f25dce0a09f772c39c41955ee1432d8a6a190100f3042c141c5d73c11905\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f60c05c05862207f94f14c95d5973bd6d7e906f867b7cf1c3a0d42c492448c2\",\"dweb:/ipfs/QmPWnCPTPndMLHwjD69U58K7q6kKgQr9hxCXQ86X78vBNJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"type":"error","name":"BadReturnValueFromERC20OnTransfer"},{"inputs":[{"internalType":"address","name":"channel","type":"address"}],"type":"error","name":"ChannelClosed"},{"inputs":[{"internalType":"address","name":"channel","type":"address"},{"internalType":"bool","name":"isOpen","type":"bool"}],"type":"error","name":"ChannelStatusAlreadySet"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"identifiers","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"type":"error","name":"ERC1155BatchTransferGenericFailure"},{"inputs":[],"type":"error","name":"Invalid1155BatchTransferEncoding"},{"inputs":[],"type":"error","name":"InvalidController"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"type":"error","name":"InvalidERC721TransferAmount"},{"inputs":[],"type":"error","name":"InvalidItemType"},{"inputs":[],"type":"error","name":"MissingItemAmount"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"NoContract"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"type":"error","name":"TokenTransferGenericFailure"},{"inputs":[],"type":"error","name":"UnusedItemParameters"},{"inputs":[{"internalType":"address","name":"channel","type":"address","indexed":true},{"internalType":"bool","name":"open","type":"bool","indexed":false}],"type":"event","name":"ChannelUpdated","anonymous":false},{"inputs":[{"internalType":"struct ConduitTransfer[]","name":"transfers","type":"tuple[]","components":[{"internalType":"enum ConduitItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"execute","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}]},{"inputs":[{"internalType":"struct ConduitBatch1155Transfer[]","name":"batchTransfers","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]}],"stateMutability":"nonpayable","type":"function","name":"executeBatch1155","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}]},{"inputs":[{"internalType":"struct ConduitTransfer[]","name":"standardTransfers","type":"tuple[]","components":[{"internalType":"enum ConduitItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct ConduitBatch1155Transfer[]","name":"batchTransfers","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]}],"stateMutability":"nonpayable","type":"function","name":"executeWithBatch1155","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"channel","type":"address"},{"internalType":"bool","name":"isOpen","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"updateChannel"}],"devdoc":{"kind":"dev","methods":{"execute((uint8,address,address,address,uint256,uint256)[])":{"params":{"transfers":"The ERC20/721/1155 transfers to perform."},"returns":{"magicValue":"A magic value indicating that the transfers were                    performed successfully."}},"executeBatch1155((address,address,address,uint256[],uint256[])[])":{"params":{"batchTransfers":"The 1155 batch item transfers to perform."},"returns":{"magicValue":"A magic value indicating that the item transfers were                    performed successfully."}},"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])":{"params":{"batchTransfers":"The 1155 batch item transfers to perform.","standardTransfers":"The ERC20/721/1155 item transfers to perform."},"returns":{"magicValue":"A magic value indicating that the item transfers were                    performed successfully."}},"updateChannel(address,bool)":{"params":{"channel":"The channel to open or close.","isOpen":"The status of the channel (either open or closed)."}}},"version":1},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"In the constructor, set the deployer as the controller."},"execute((uint8,address,address,address,uint256,uint256)[])":{"notice":"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired."},"executeBatch1155((address,address,address,uint256[],uint256[])[])":{"notice":"Execute a sequence of batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired."},"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])":{"notice":"Execute a sequence of transfers, both single ERC20/721/1155 item         transfers as well as batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired."},"updateChannel(address,bool)":{"notice":"Open or close a given channel. Only callable by the controller."}},"version":1}},"settings":{"remappings":["@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@merkle-generator/=lib/merkle-proof-generator/src/","@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/","@safe-contracts/=lib/safe-contracts/contracts/","@scripts/=scripts/","@seaport-core/=lib/seaport-core/src/","@seaport-sol/=lib/seaport-sol/src/","@seaport-types/=lib/seaport-types/src/","@solady/=lib/Solady/src/","@src/=src/","@test/=test/","Solady/=lib/Solady/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/seaport-sol/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","safe-contracts/=lib/safe-contracts/","seaport-core/=lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/seaport-sol/lib/solady/","solarray/=lib/seaport-sol/lib/solarray/src/","solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/seaport-core/src/conduit/Conduit.sol":"Conduit"},"evmVersion":"paris","libraries":{}},"sources":{"lib/seaport-core/src/conduit/Conduit.sol":{"keccak256":"0xec1cd6b6a0552c9d2a236fe1df562dc6795f2a35067120979ef299b13928ed75","urls":["bzz-raw://2d6255a857de2e49b15c01896f6e2b81c2bc8cae3d14562e3c8d42fb7949a098","dweb:/ipfs/QmWLg6NE5gEEAPJR7UW21fzSFycapTSCEXdCr45FFuMr7q"],"license":"MIT"},"lib/seaport-core/src/lib/TokenTransferrer.sol":{"keccak256":"0x02822d391094cc733a1215a9dcca933099592d4902e327832e7a4ddbfe910df1","urls":["bzz-raw://7951093d038b3577c66febf10be0435b2c2093df55b03827406e130880dfa96b","dweb:/ipfs/QmbjnYUwHbgU7jrbuLakh9FSkGcPNAxzH3TTRUoUEEFZdo"],"license":"MIT"},"lib/seaport-types/src/conduit/lib/ConduitConstants.sol":{"keccak256":"0xf9d1a7d4c805e3851ddc7fb9329dab68745cd38833f20b473799f86df97b5c23","urls":["bzz-raw://8aa922f6e11d22005f4d61edc338b29177dae0fc50f86de226eca31969c1aa48","dweb:/ipfs/QmT3gFEuLEZ4DYsAuhg4QVyG2iWLGmuT9cyreHYWnN7CfX"],"license":"MIT"},"lib/seaport-types/src/conduit/lib/ConduitEnums.sol":{"keccak256":"0x1b24e84bbd29d52cebcb0bda26c8095c9d7a8e5719dd1b0e203315be0df4dcf7","urls":["bzz-raw://901be0c9ea392a69611b884985a772547e83ce78610a40e989216d842c8eb4b0","dweb:/ipfs/QmPW1kDrkUEAvF6gy5FHsVmXNe2C1czAovXKL18T5jKiVx"],"license":"MIT"},"lib/seaport-types/src/conduit/lib/ConduitStructs.sol":{"keccak256":"0xe765c83ddb65b13547db2914f7212689707fcd85c1bbe5c49dbe3e98c4942dd9","urls":["bzz-raw://1318c90a615b9c2098c1f7435925c76913d2c54b79a53f8f64eae59d60ed5564","dweb:/ipfs/QmXkTSAvkrMbrNLJjehm3JXeBoyW6dDYWRsdFkuDVb33sa"],"license":"MIT"},"lib/seaport-types/src/interfaces/ConduitInterface.sol":{"keccak256":"0x5710e503e7550594cf98bade51646da1420d09c1b4758315484810df72d7cf64","urls":["bzz-raw://d3831fc9b36ce3760c39f60682487848f9678157794b995207f15d93ca1cc58a","dweb:/ipfs/QmaapZB4DdYhUSkjySHJk9n7ajEfmX1hwWXWwEHAixYPQQ"],"license":"MIT"},"lib/seaport-types/src/interfaces/TokenTransferrerErrors.sol":{"keccak256":"0x9ba38397a8b8e3c7d1119138ef452d1b801bdcf594699ba51a6b2858045b55e5","urls":["bzz-raw://40919b9dfed2d2562ba8101bfc5e5333241dff9fc323b1cdb3d60a67820ebba4","dweb:/ipfs/QmQTyJF7pkKpY1p3vrVpkQASbC8uYWKaEUMtRc5Y6UKZam"],"license":"MIT"},"lib/seaport-types/src/lib/TokenTransferrerConstants.sol":{"keccak256":"0x0782f25dce0a09f772c39c41955ee1432d8a6a190100f3042c141c5d73c11905","urls":["bzz-raw://1f60c05c05862207f94f14c95d5973bd6d7e906f867b7cf1c3a0d42c492448c2","dweb:/ipfs/QmPWnCPTPndMLHwjD69U58K7q6kKgQr9hxCXQ86X78vBNJ"],"license":"MIT"}},"version":1},"id":61}