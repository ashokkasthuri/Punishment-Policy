{"abi":[{"type":"error","name":"BadReturnValueFromERC20OnTransfer","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC1155BatchTransferGenericFailure","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"identifiers","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}]},{"type":"error","name":"Invalid1155BatchTransferEncoding","inputs":[]},{"type":"error","name":"InvalidERC721TransferAmount","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MissingItemAmount","inputs":[]},{"type":"error","name":"NoContract","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"TokenTransferGenericFailure","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"UnusedItemParameters","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidERC721TransferAmount(uint256)\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\",\"params\":{\"amount\":\"The amount of the ERC721 tokens to transfer.\"}}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenTransferrerErrors\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/seaport-types/src/interfaces/TokenTransferrerErrors.sol\":\"TokenTransferrerErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@merkle-generator/=lib/merkle-proof-generator/src/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/\",\":@safe-contracts/=lib/safe-contracts/contracts/\",\":@scripts/=scripts/\",\":@seaport-core/=lib/seaport-core/src/\",\":@seaport-sol/=lib/seaport-sol/src/\",\":@seaport-types/=lib/seaport-types/src/\",\":@solady/=lib/Solady/src/\",\":@src/=src/\",\":@test/=test/\",\":Solady/=lib/Solady/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/seaport-sol/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":seaport-core/=lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/seaport-sol/lib/solady/\",\":solarray/=lib/seaport-sol/lib/solarray/src/\",\":solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/\"]},\"sources\":{\"lib/seaport-types/src/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0x9ba38397a8b8e3c7d1119138ef452d1b801bdcf594699ba51a6b2858045b55e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40919b9dfed2d2562ba8101bfc5e5333241dff9fc323b1cdb3d60a67820ebba4\",\"dweb:/ipfs/QmQTyJF7pkKpY1p3vrVpkQASbC8uYWKaEUMtRc5Y6UKZam\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"type":"error","name":"BadReturnValueFromERC20OnTransfer"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"identifiers","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"type":"error","name":"ERC1155BatchTransferGenericFailure"},{"inputs":[],"type":"error","name":"Invalid1155BatchTransferEncoding"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"type":"error","name":"InvalidERC721TransferAmount"},{"inputs":[],"type":"error","name":"MissingItemAmount"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"NoContract"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"type":"error","name":"TokenTransferGenericFailure"},{"inputs":[],"type":"error","name":"UnusedItemParameters"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@merkle-generator/=lib/merkle-proof-generator/src/","@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/","@safe-contracts/=lib/safe-contracts/contracts/","@scripts/=scripts/","@seaport-core/=lib/seaport-core/src/","@seaport-sol/=lib/seaport-sol/src/","@seaport-types/=lib/seaport-types/src/","@solady/=lib/Solady/src/","@src/=src/","@test/=test/","Solady/=lib/Solady/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/seaport-sol/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","safe-contracts/=lib/safe-contracts/","seaport-core/=lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/seaport-sol/lib/solady/","solarray/=lib/seaport-sol/lib/solarray/src/","solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/seaport-types/src/interfaces/TokenTransferrerErrors.sol":"TokenTransferrerErrors"},"evmVersion":"paris","libraries":{}},"sources":{"lib/seaport-types/src/interfaces/TokenTransferrerErrors.sol":{"keccak256":"0x9ba38397a8b8e3c7d1119138ef452d1b801bdcf594699ba51a6b2858045b55e5","urls":["bzz-raw://40919b9dfed2d2562ba8101bfc5e5333241dff9fc323b1cdb3d60a67820ebba4","dweb:/ipfs/QmQTyJF7pkKpY1p3vrVpkQASbC8uYWKaEUMtRc5Y6UKZam"],"license":"MIT"}},"version":1},"id":99}