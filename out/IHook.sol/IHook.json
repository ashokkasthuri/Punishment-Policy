{"abi":[{"type":"function","name":"onStart","inputs":[{"name":"safe","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"extraData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onStop","inputs":[{"name":"safe","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"extraData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"onTransaction","inputs":[{"name":"safe","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onStart(address,address,uint256,uint256,bytes)":"f5aa1eee","onStop(address,address,uint256,uint256,bytes)":"0747c995","onTransaction(address,address,uint256,bytes)":"f957ee78"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"onStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"onStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onStart(address,address,uint256,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of the rented asset being transferred.\",\"extraData\":\"Any extra data sent along with the hook.\",\"identifier\":\"ID of the rented asset.\",\"safe\":\"Rental wallet which will receive the rented asset associated                   with this hook.\",\"token\":\"Address of the rented asset.\"}},\"onStop(address,address,uint256,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of the rented asset being transferred.\",\"extraData\":\"Any extra data sent along with the hook.\",\"identifier\":\"ID of the rented asset.\",\"safe\":\"Rental wallet currently owning the rented asset associated with                   this hook.\",\"token\":\"Address of the rented asset.\"}},\"onTransaction(address,address,uint256,bytes)\":{\"params\":{\"data\":\"Any extra data sent along with the hook.\",\"safe\":\"Rental wallet that initiated the call.\",\"to\":\"Recipient of the call.\",\"value\":\"Value of ether sent with the call.\"}}},\"title\":\"IHook\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onStart(address,address,uint256,uint256,bytes)\":{\"notice\":\"Triggers this hook call when a rental has been started.\"},\"onStop(address,address,uint256,uint256,bytes)\":{\"notice\":\"Triggers this hook call when a rental has been stopped.\"},\"onTransaction(address,address,uint256,bytes)\":{\"notice\":\"Triggers this hook call during a transaction involving a rented asset with         an active hook address attached to its metadata.\"}},\"notice\":\"Interface for hook contracts which are capable of being called when a rental         begins, ends, or during a transaction that involves a rented asset.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IHook.sol\":\"IHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@merkle-generator/=lib/merkle-proof-generator/src/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/\",\":@safe-contracts/=lib/safe-contracts/contracts/\",\":@scripts/=scripts/\",\":@seaport-core/=lib/seaport-core/src/\",\":@seaport-sol/=lib/seaport-sol/src/\",\":@seaport-types/=lib/seaport-types/src/\",\":@solady/=lib/Solady/src/\",\":@src/=src/\",\":@test/=test/\",\":Solady/=lib/Solady/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/seaport-sol/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":seaport-core/=lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/seaport-sol/lib/solady/\",\":solarray/=lib/seaport-sol/lib/solarray/src/\",\":solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/\"]},\"sources\":{\"src/interfaces/IHook.sol\":{\"keccak256\":\"0x5ac71f519c3254ddd9512053f6ed3dd8f25b50e957eff6e47c296105dcdff6ba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://21f04db7ad0c2ac243a11b19e354dabfa32097d304f5779bc5e6f96651bd0b15\",\"dweb:/ipfs/QmcMSdi8ieWkQptJHLUJTSpTLWd19xiQqPWW6YCBao9McS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"safe","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onStart"},{"inputs":[{"internalType":"address","name":"safe","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onStop"},{"inputs":[{"internalType":"address","name":"safe","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onTransaction"}],"devdoc":{"kind":"dev","methods":{"onStart(address,address,uint256,uint256,bytes)":{"params":{"amount":"Amount of the rented asset being transferred.","extraData":"Any extra data sent along with the hook.","identifier":"ID of the rented asset.","safe":"Rental wallet which will receive the rented asset associated                   with this hook.","token":"Address of the rented asset."}},"onStop(address,address,uint256,uint256,bytes)":{"params":{"amount":"Amount of the rented asset being transferred.","extraData":"Any extra data sent along with the hook.","identifier":"ID of the rented asset.","safe":"Rental wallet currently owning the rented asset associated with                   this hook.","token":"Address of the rented asset."}},"onTransaction(address,address,uint256,bytes)":{"params":{"data":"Any extra data sent along with the hook.","safe":"Rental wallet that initiated the call.","to":"Recipient of the call.","value":"Value of ether sent with the call."}}},"version":1},"userdoc":{"kind":"user","methods":{"onStart(address,address,uint256,uint256,bytes)":{"notice":"Triggers this hook call when a rental has been started."},"onStop(address,address,uint256,uint256,bytes)":{"notice":"Triggers this hook call when a rental has been stopped."},"onTransaction(address,address,uint256,bytes)":{"notice":"Triggers this hook call during a transaction involving a rented asset with         an active hook address attached to its metadata."}},"version":1}},"settings":{"remappings":["@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@merkle-generator/=lib/merkle-proof-generator/src/","@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/","@safe-contracts/=lib/safe-contracts/contracts/","@scripts/=scripts/","@seaport-core/=lib/seaport-core/src/","@seaport-sol/=lib/seaport-sol/src/","@seaport-types/=lib/seaport-types/src/","@solady/=lib/Solady/src/","@src/=src/","@test/=test/","Solady/=lib/Solady/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/seaport-sol/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","safe-contracts/=lib/safe-contracts/","seaport-core/=lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/seaport-sol/lib/solady/","solarray/=lib/seaport-sol/lib/solarray/src/","solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IHook.sol":"IHook"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/IHook.sol":{"keccak256":"0x5ac71f519c3254ddd9512053f6ed3dd8f25b50e957eff6e47c296105dcdff6ba","urls":["bzz-raw://21f04db7ad0c2ac243a11b19e354dabfa32097d304f5779bc5e6f96651bd0b15","dweb:/ipfs/QmcMSdi8ieWkQptJHLUJTSpTLWd19xiQqPWW6YCBao9McS"],"license":"BUSL-1.1"}},"version":1},"id":129}