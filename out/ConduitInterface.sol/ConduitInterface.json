{"abi":[{"type":"function","name":"execute","inputs":[{"name":"transfers","type":"tuple[]","internalType":"struct ConduitTransfer[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ConduitItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"magicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"executeBatch1155","inputs":[{"name":"batch1155Transfers","type":"tuple[]","internalType":"struct ConduitBatch1155Transfer[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[{"name":"magicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"executeWithBatch1155","inputs":[{"name":"standardTransfers","type":"tuple[]","internalType":"struct ConduitTransfer[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ConduitItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"batch1155Transfers","type":"tuple[]","internalType":"struct ConduitBatch1155Transfer[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}]}],"outputs":[{"name":"magicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateChannel","inputs":[{"name":"channel","type":"address","internalType":"address"},{"name":"isOpen","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ChannelUpdated","inputs":[{"name":"channel","type":"address","indexed":true,"internalType":"address"},{"name":"open","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"error","name":"ChannelClosed","inputs":[{"name":"channel","type":"address","internalType":"address"}]},{"type":"error","name":"ChannelStatusAlreadySet","inputs":[{"name":"channel","type":"address","internalType":"address"},{"name":"isOpen","type":"bool","internalType":"bool"}]},{"type":"error","name":"InvalidController","inputs":[]},{"type":"error","name":"InvalidItemType","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"execute((uint8,address,address,address,uint256,uint256)[])":"4ce34aa2","executeBatch1155((address,address,address,uint256[],uint256[])[])":"8df25d92","executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])":"899e104c","updateChannel(address,bool)":"c4e8fcb5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"ChannelStatusAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"ChannelClosed(address)\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ChannelStatusAlreadySet(address,bool)\":[{\"details\":\"Revert with an error when attempting to update a channel to the      current status of that channel.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}]},\"events\":{\"ChannelUpdated(address,bool)\":{\"details\":\"Emit an event whenever a channel is opened or closed.\",\"params\":{\"channel\":\"The channel that has been updated.\",\"open\":\"A boolean indicating whether the conduit is open or not.\"}}},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"ConduitInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 transfers. Only a caller with an         open channel can call this function.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single and batch 1155. Only         a caller with an open channel can call this function.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"ConduitInterface contains all external function interfaces, events,         and errors for conduit contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/seaport-types/src/interfaces/ConduitInterface.sol\":\"ConduitInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@merkle-generator/=lib/merkle-proof-generator/src/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/\",\":@safe-contracts/=lib/safe-contracts/contracts/\",\":@scripts/=scripts/\",\":@seaport-core/=lib/seaport-core/src/\",\":@seaport-sol/=lib/seaport-sol/src/\",\":@seaport-types/=lib/seaport-types/src/\",\":@solady/=lib/Solady/src/\",\":@src/=src/\",\":@test/=test/\",\":Solady/=lib/Solady/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/seaport-sol/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":seaport-core/=lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/seaport-sol/lib/solady/\",\":solarray/=lib/seaport-sol/lib/solarray/src/\",\":solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/\"]},\"sources\":{\"lib/seaport-types/src/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x1b24e84bbd29d52cebcb0bda26c8095c9d7a8e5719dd1b0e203315be0df4dcf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://901be0c9ea392a69611b884985a772547e83ce78610a40e989216d842c8eb4b0\",\"dweb:/ipfs/QmPW1kDrkUEAvF6gy5FHsVmXNe2C1czAovXKL18T5jKiVx\"]},\"lib/seaport-types/src/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xe765c83ddb65b13547db2914f7212689707fcd85c1bbe5c49dbe3e98c4942dd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1318c90a615b9c2098c1f7435925c76913d2c54b79a53f8f64eae59d60ed5564\",\"dweb:/ipfs/QmXkTSAvkrMbrNLJjehm3JXeBoyW6dDYWRsdFkuDVb33sa\"]},\"lib/seaport-types/src/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0x5710e503e7550594cf98bade51646da1420d09c1b4758315484810df72d7cf64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3831fc9b36ce3760c39f60682487848f9678157794b995207f15d93ca1cc58a\",\"dweb:/ipfs/QmaapZB4DdYhUSkjySHJk9n7ajEfmX1hwWXWwEHAixYPQQ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"channel","type":"address"}],"type":"error","name":"ChannelClosed"},{"inputs":[{"internalType":"address","name":"channel","type":"address"},{"internalType":"bool","name":"isOpen","type":"bool"}],"type":"error","name":"ChannelStatusAlreadySet"},{"inputs":[],"type":"error","name":"InvalidController"},{"inputs":[],"type":"error","name":"InvalidItemType"},{"inputs":[{"internalType":"address","name":"channel","type":"address","indexed":true},{"internalType":"bool","name":"open","type":"bool","indexed":false}],"type":"event","name":"ChannelUpdated","anonymous":false},{"inputs":[{"internalType":"struct ConduitTransfer[]","name":"transfers","type":"tuple[]","components":[{"internalType":"enum ConduitItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"execute","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}]},{"inputs":[{"internalType":"struct ConduitBatch1155Transfer[]","name":"batch1155Transfers","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]}],"stateMutability":"nonpayable","type":"function","name":"executeBatch1155","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}]},{"inputs":[{"internalType":"struct ConduitTransfer[]","name":"standardTransfers","type":"tuple[]","components":[{"internalType":"enum ConduitItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct ConduitBatch1155Transfer[]","name":"batch1155Transfers","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}]}],"stateMutability":"nonpayable","type":"function","name":"executeWithBatch1155","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"channel","type":"address"},{"internalType":"bool","name":"isOpen","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"updateChannel"}],"devdoc":{"kind":"dev","methods":{"execute((uint8,address,address,address,uint256,uint256)[])":{"params":{"transfers":"The ERC20/721/1155 transfers to perform."},"returns":{"magicValue":"A magic value indicating that the transfers were                    performed successfully."}},"executeBatch1155((address,address,address,uint256[],uint256[])[])":{"params":{"batch1155Transfers":"The 1155 batch transfers to perform."},"returns":{"magicValue":"A magic value indicating that the transfers were                    performed successfully."}},"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])":{"params":{"batch1155Transfers":"The 1155 batch transfers to perform.","standardTransfers":"The ERC20/721/1155 transfers to perform."},"returns":{"magicValue":"A magic value indicating that the transfers were                    performed successfully."}},"updateChannel(address,bool)":{"params":{"channel":"The channel to open or close.","isOpen":"The status of the channel (either open or closed)."}}},"version":1},"userdoc":{"kind":"user","methods":{"execute((uint8,address,address,address,uint256,uint256)[])":{"notice":"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function."},"executeBatch1155((address,address,address,uint256[],uint256[])[])":{"notice":"Execute a sequence of batch 1155 transfers. Only a caller with an         open channel can call this function."},"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])":{"notice":"Execute a sequence of transfers, both single and batch 1155. Only         a caller with an open channel can call this function."},"updateChannel(address,bool)":{"notice":"Open or close a given channel. Only callable by the controller."}},"version":1}},"settings":{"remappings":["@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@merkle-generator/=lib/merkle-proof-generator/src/","@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/","@safe-contracts/=lib/safe-contracts/contracts/","@scripts/=scripts/","@seaport-core/=lib/seaport-core/src/","@seaport-sol/=lib/seaport-sol/src/","@seaport-types/=lib/seaport-types/src/","@solady/=lib/Solady/src/","@src/=src/","@test/=test/","Solady/=lib/Solady/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/seaport-sol/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","safe-contracts/=lib/safe-contracts/","seaport-core/=lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/seaport-sol/lib/solady/","solarray/=lib/seaport-sol/lib/solarray/src/","solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/seaport-types/src/interfaces/ConduitInterface.sol":"ConduitInterface"},"evmVersion":"paris","libraries":{}},"sources":{"lib/seaport-types/src/conduit/lib/ConduitEnums.sol":{"keccak256":"0x1b24e84bbd29d52cebcb0bda26c8095c9d7a8e5719dd1b0e203315be0df4dcf7","urls":["bzz-raw://901be0c9ea392a69611b884985a772547e83ce78610a40e989216d842c8eb4b0","dweb:/ipfs/QmPW1kDrkUEAvF6gy5FHsVmXNe2C1czAovXKL18T5jKiVx"],"license":"MIT"},"lib/seaport-types/src/conduit/lib/ConduitStructs.sol":{"keccak256":"0xe765c83ddb65b13547db2914f7212689707fcd85c1bbe5c49dbe3e98c4942dd9","urls":["bzz-raw://1318c90a615b9c2098c1f7435925c76913d2c54b79a53f8f64eae59d60ed5564","dweb:/ipfs/QmXkTSAvkrMbrNLJjehm3JXeBoyW6dDYWRsdFkuDVb33sa"],"license":"MIT"},"lib/seaport-types/src/interfaces/ConduitInterface.sol":{"keccak256":"0x5710e503e7550594cf98bade51646da1420d09c1b4758315484810df72d7cf64","urls":["bzz-raw://d3831fc9b36ce3760c39f60682487848f9678157794b995207f15d93ca1cc58a","dweb:/ipfs/QmaapZB4DdYhUSkjySHJk9n7ajEfmX1hwWXWwEHAixYPQQ"],"license":"MIT"}},"version":1},"id":92}