{"abi":[{"type":"function","name":"changeKernel","inputs":[{"name":"newKernel_","type":"address","internalType":"contract Kernel"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"configureDependencies","inputs":[],"outputs":[{"name":"dependencies","type":"bytes5[]","internalType":"Keycode[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"isActive","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"kernel","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract Kernel"}],"stateMutability":"view"},{"type":"function","name":"requestPermissions","inputs":[],"outputs":[{"name":"requests","type":"tuple[]","internalType":"struct Permissions[]","components":[{"name":"keycode","type":"bytes5","internalType":"Keycode"},{"name":"funcSelector","type":"bytes4","internalType":"bytes4"}]}],"stateMutability":"view"},{"type":"function","name":"setActiveStatus","inputs":[{"name":"activate_","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"KernelAdapter_OnlyKernel","inputs":[{"name":"caller_","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"changeKernel(address)":"4657b36c","configureDependencies()":"9459b875","isActive()":"22f3e2d4","kernel()":"d4aae0c4","requestPermissions()":"5924be70","setActiveStatus(bool)":"ec7404b1"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"}],\"name\":\"KernelAdapter_OnlyKernel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"newKernel_\",\"type\":\"address\"}],\"name\":\"changeKernel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"configureDependencies\",\"outputs\":[{\"internalType\":\"Keycode[]\",\"name\":\"dependencies\",\"type\":\"bytes5[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kernel\",\"outputs\":[{\"internalType\":\"contract Kernel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"Keycode\",\"name\":\"keycode\",\"type\":\"bytes5\"},{\"internalType\":\"bytes4\",\"name\":\"funcSelector\",\"type\":\"bytes4\"}],\"internalType\":\"struct Permissions[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"activate_\",\"type\":\"bool\"}],\"name\":\"setActiveStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"KernelAdapter_OnlyKernel(address)\":[{\"details\":\"Thrown when attempting to call a function that is only callable by the Kernel.      The kernel is the only address authorized to migrate the kernel contract,      initialize modules, and configure dependencies and permissions on policies.\",\"params\":{\"caller_\":\"Address that attempted the call.\"}}]},\"kind\":\"dev\",\"methods\":{\"changeKernel(address)\":{\"params\":{\"newKernel_\":\"Address of the new kernel contract.\"}},\"configureDependencies()\":{\"params\":{\"dependencies\":\"Keycodes of all the modules that the policy depends on.\"}},\"constructor\":{\"details\":\"Instantiate this contract as a a policy. When using a proxy, the kernel address      should be set to address(0).\",\"params\":{\"kernel_\":\"Address of the kernel contract.\"}},\"requestPermissions()\":{\"params\":{\"requests\":\"Keycode <> function selector pairs which define the module access                 requested by a policy.\"}},\"setActiveStatus(bool)\":{\"params\":{\"activate_\":\"Whether to activate or deactivate the policy.\"}}},\"title\":\"Policy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeKernel(address)\":{\"notice\":\"Points the adapter to reference a new kernel address. This function can         only be called by the active kernel, and is used to perform migrations by         telling all policies and modules where the new kernel is located before         actually performing the migration.\"},\"configureDependencies()\":{\"notice\":\"When a policy is activated, it must respond with all of the module         keycodes that it depends on. The kernel stores these dependencies as a         mapping from module keycode to an array of policies that depend on it.         This is useful because when a module is upgraded, it can know exactly         the policies that depend upon it and call out to each policy to         reconfigure its dependencies to use the upgraded module contract address.\"},\"requestPermissions()\":{\"notice\":\"When a policy is activated, it must respond with a series of         keycode <> function selector pairs which represent a request for the         policy to call a specific function selector at a specific module.         These requests are stored as a mapping in the kernel while the policy         is active, and the kernel will reject any call from a policy to a module         which has not first requested permission.\"},\"setActiveStatus(bool)\":{\"notice\":\"Allows the kernel to grant or revoke the active status of the policy.\"}},\"notice\":\"A base contract to be inherited by all policy implementations. Provides common         logic related to policy functionality.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Kernel.sol\":\"Policy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@merkle-generator/=lib/merkle-proof-generator/src/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/\",\":@safe-contracts/=lib/safe-contracts/contracts/\",\":@scripts/=scripts/\",\":@seaport-core/=lib/seaport-core/src/\",\":@seaport-sol/=lib/seaport-sol/src/\",\":@seaport-types/=lib/seaport-types/src/\",\":@solady/=lib/Solady/src/\",\":@src/=src/\",\":@test/=test/\",\":Solady/=lib/Solady/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/seaport-sol/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":seaport-core/=lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/seaport-sol/lib/solady/\",\":solarray/=lib/seaport-sol/lib/solarray/src/\",\":solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/\"]},\"sources\":{\"lib/seaport-types/src/helpers/PointerLibraries.sol\":{\"keccak256\":\"0xf9106392d8616040b61748bce0ff35856c4a3eba5eb5eb269eaeb97747fe40e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://046f05ce4d4428d3ca6264ab03e1b6cee5751776f02cc87d66d11ee479a42992\",\"dweb:/ipfs/Qme5bKudPZWxH4DYDLQE2sD23xNVbQH4NjrL6pBacv54FD\"]},\"lib/seaport-types/src/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0xeb0de4edbad252c3227c59b66721978316202c4d31c5370a8669c4051984e345\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00451d1ceb616b7cccf0e4be073483d5c99fcc205fe6a1056ce35b8703be16e3\",\"dweb:/ipfs/QmbeoxgRcgwK18Vw1G1mVAFKMnYYT2oQp1idfazNicwncq\"]},\"lib/seaport-types/src/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0x05bc9ccb74c9fb4d073c9adc36da28a5a0ab961886fcd4a681ccb8d7eb74e0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://911be5f248b2ad47a24ca9949f4b8114db5432c7f2769650c0f3e4ea6bb0b17b\",\"dweb:/ipfs/QmdNmqhwc1UMxbCPXqe9FDua7negVWSGU5cPAWSbUTnKDV\"]},\"src/Kernel.sol\":{\"keccak256\":\"0x88d909df3036207a2a306fa29c438d1ed2935dc7485b35bf7323f36247d864f0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://85a16d89ab62c20e833b6708c302008bcbf837dee1437e689f258a20ae9f5ddf\",\"dweb:/ipfs/QmUYSx67omzXZGKU9nx5eAumSQ1FoKQqhn3FxJDpf5eMAp\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x10a935101a50809bf658c42ea9976e810ff595c76fcf46bcfe3d3996bc6fc087\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5d7c39cec7b2ec96be73a0f988de5fd11dac5fd8f88238b1530d31ef45c5edc8\",\"dweb:/ipfs/QmfA1er3b3aaPa4w2WAcnhwXLLCxEc1K6izDPmNqi2T7XG\"]},\"src/libraries/Events.sol\":{\"keccak256\":\"0x671d86ec6260bb78dcb40aff192a439c8a226bb7f8c02e333c9881d8ced18700\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5fa252829af25109eca6a0bda60a0ee9d4dc44661ab61507c4c3167f6aee75c5\",\"dweb:/ipfs/QmNxTzZq7BNMB15Mmuu8EdG7yF6Nx8s7hENvkWp2Abejbs\"]},\"src/libraries/KernelUtils.sol\":{\"keccak256\":\"0xe996b7f4f85a99328c7364a1b9a25eab0ab58b9250b001ec8bad41851eb950f4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://aee3f2e9598dc105aaf5dc5e0eed61e7d2b916f60923572c03357b38defd2150\",\"dweb:/ipfs/QmTHQyPwYgthke3KE9R6gUHhxw34HLWRyrCHZdybtAU49M\"]},\"src/libraries/RentalStructs.sol\":{\"keccak256\":\"0x1749156ee39095eb4a3e88a0c1e566895463da2d13db7082f3c904f86bf42a4c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://49c96cbb0a32ca8322dd2058b968ec8851f93832a6e37a4ea2872bb749e6a89a\",\"dweb:/ipfs/QmX2yQvmVzSL1RAkDQ2n9tSnTRBhDz1Fkk5c9mGoegcQYf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"caller_","type":"address"}],"type":"error","name":"KernelAdapter_OnlyKernel"},{"inputs":[{"internalType":"contract Kernel","name":"newKernel_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"changeKernel"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"configureDependencies","outputs":[{"internalType":"Keycode[]","name":"dependencies","type":"bytes5[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"kernel","outputs":[{"internalType":"contract Kernel","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"requestPermissions","outputs":[{"internalType":"struct Permissions[]","name":"requests","type":"tuple[]","components":[{"internalType":"Keycode","name":"keycode","type":"bytes5"},{"internalType":"bytes4","name":"funcSelector","type":"bytes4"}]}]},{"inputs":[{"internalType":"bool","name":"activate_","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setActiveStatus"}],"devdoc":{"kind":"dev","methods":{"changeKernel(address)":{"params":{"newKernel_":"Address of the new kernel contract."}},"configureDependencies()":{"params":{"dependencies":"Keycodes of all the modules that the policy depends on."}},"constructor":{"details":"Instantiate this contract as a a policy. When using a proxy, the kernel address      should be set to address(0).","params":{"kernel_":"Address of the kernel contract."}},"requestPermissions()":{"params":{"requests":"Keycode <> function selector pairs which define the module access                 requested by a policy."}},"setActiveStatus(bool)":{"params":{"activate_":"Whether to activate or deactivate the policy."}}},"version":1},"userdoc":{"kind":"user","methods":{"changeKernel(address)":{"notice":"Points the adapter to reference a new kernel address. This function can         only be called by the active kernel, and is used to perform migrations by         telling all policies and modules where the new kernel is located before         actually performing the migration."},"configureDependencies()":{"notice":"When a policy is activated, it must respond with all of the module         keycodes that it depends on. The kernel stores these dependencies as a         mapping from module keycode to an array of policies that depend on it.         This is useful because when a module is upgraded, it can know exactly         the policies that depend upon it and call out to each policy to         reconfigure its dependencies to use the upgraded module contract address."},"requestPermissions()":{"notice":"When a policy is activated, it must respond with a series of         keycode <> function selector pairs which represent a request for the         policy to call a specific function selector at a specific module.         These requests are stored as a mapping in the kernel while the policy         is active, and the kernel will reject any call from a policy to a module         which has not first requested permission."},"setActiveStatus(bool)":{"notice":"Allows the kernel to grant or revoke the active status of the policy."}},"version":1}},"settings":{"remappings":["@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@merkle-generator/=lib/merkle-proof-generator/src/","@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/","@safe-contracts/=lib/safe-contracts/contracts/","@scripts/=scripts/","@seaport-core/=lib/seaport-core/src/","@seaport-sol/=lib/seaport-sol/src/","@seaport-types/=lib/seaport-types/src/","@solady/=lib/Solady/src/","@src/=src/","@test/=test/","Solady/=lib/Solady/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/seaport-sol/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","safe-contracts/=lib/safe-contracts/","seaport-core/=lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/seaport-sol/lib/solady/","solarray/=lib/seaport-sol/lib/solarray/src/","solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/Kernel.sol":"Policy"},"evmVersion":"paris","libraries":{}},"sources":{"lib/seaport-types/src/helpers/PointerLibraries.sol":{"keccak256":"0xf9106392d8616040b61748bce0ff35856c4a3eba5eb5eb269eaeb97747fe40e7","urls":["bzz-raw://046f05ce4d4428d3ca6264ab03e1b6cee5751776f02cc87d66d11ee479a42992","dweb:/ipfs/Qme5bKudPZWxH4DYDLQE2sD23xNVbQH4NjrL6pBacv54FD"],"license":"MIT"},"lib/seaport-types/src/lib/ConsiderationEnums.sol":{"keccak256":"0xeb0de4edbad252c3227c59b66721978316202c4d31c5370a8669c4051984e345","urls":["bzz-raw://00451d1ceb616b7cccf0e4be073483d5c99fcc205fe6a1056ce35b8703be16e3","dweb:/ipfs/QmbeoxgRcgwK18Vw1G1mVAFKMnYYT2oQp1idfazNicwncq"],"license":"MIT"},"lib/seaport-types/src/lib/ConsiderationStructs.sol":{"keccak256":"0x05bc9ccb74c9fb4d073c9adc36da28a5a0ab961886fcd4a681ccb8d7eb74e0ed","urls":["bzz-raw://911be5f248b2ad47a24ca9949f4b8114db5432c7f2769650c0f3e4ea6bb0b17b","dweb:/ipfs/QmdNmqhwc1UMxbCPXqe9FDua7negVWSGU5cPAWSbUTnKDV"],"license":"MIT"},"src/Kernel.sol":{"keccak256":"0x88d909df3036207a2a306fa29c438d1ed2935dc7485b35bf7323f36247d864f0","urls":["bzz-raw://85a16d89ab62c20e833b6708c302008bcbf837dee1437e689f258a20ae9f5ddf","dweb:/ipfs/QmUYSx67omzXZGKU9nx5eAumSQ1FoKQqhn3FxJDpf5eMAp"],"license":"BUSL-1.1"},"src/libraries/Errors.sol":{"keccak256":"0x10a935101a50809bf658c42ea9976e810ff595c76fcf46bcfe3d3996bc6fc087","urls":["bzz-raw://5d7c39cec7b2ec96be73a0f988de5fd11dac5fd8f88238b1530d31ef45c5edc8","dweb:/ipfs/QmfA1er3b3aaPa4w2WAcnhwXLLCxEc1K6izDPmNqi2T7XG"],"license":"BUSL-1.1"},"src/libraries/Events.sol":{"keccak256":"0x671d86ec6260bb78dcb40aff192a439c8a226bb7f8c02e333c9881d8ced18700","urls":["bzz-raw://5fa252829af25109eca6a0bda60a0ee9d4dc44661ab61507c4c3167f6aee75c5","dweb:/ipfs/QmNxTzZq7BNMB15Mmuu8EdG7yF6Nx8s7hENvkWp2Abejbs"],"license":"BUSL-1.1"},"src/libraries/KernelUtils.sol":{"keccak256":"0xe996b7f4f85a99328c7364a1b9a25eab0ab58b9250b001ec8bad41851eb950f4","urls":["bzz-raw://aee3f2e9598dc105aaf5dc5e0eed61e7d2b916f60923572c03357b38defd2150","dweb:/ipfs/QmTHQyPwYgthke3KE9R6gUHhxw34HLWRyrCHZdybtAU49M"],"license":"BUSL-1.1"},"src/libraries/RentalStructs.sol":{"keccak256":"0x1749156ee39095eb4a3e88a0c1e566895463da2d13db7082f3c904f86bf42a4c","urls":["bzz-raw://49c96cbb0a32ca8322dd2058b968ec8851f93832a6e37a4ea2872bb749e6a89a","dweb:/ipfs/QmX2yQvmVzSL1RAkDQ2n9tSnTRBhDz1Fkk5c9mGoegcQYf"],"license":"BUSL-1.1"}},"version":1},"id":112}