{"abi":[{"type":"function","name":"generateOrder","inputs":[{"name":"fulfiller","type":"address","internalType":"address"},{"name":"minimumReceived","type":"tuple[]","internalType":"struct SpentItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"maximumSpent","type":"tuple[]","internalType":"struct SpentItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"context","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"offer","type":"tuple[]","internalType":"struct SpentItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"consideration","type":"tuple[]","internalType":"struct ReceivedItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address payable"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"getSeaportMetadata","inputs":[],"outputs":[{"name":"name","type":"string","internalType":"string"},{"name":"schemas","type":"tuple[]","internalType":"struct Schema[]","components":[{"name":"id","type":"uint256","internalType":"uint256"},{"name":"metadata","type":"bytes","internalType":"bytes"}]}],"stateMutability":"view"},{"type":"function","name":"previewOrder","inputs":[{"name":"caller","type":"address","internalType":"address"},{"name":"fulfiller","type":"address","internalType":"address"},{"name":"minimumReceived","type":"tuple[]","internalType":"struct SpentItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"maximumSpent","type":"tuple[]","internalType":"struct SpentItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"context","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"offer","type":"tuple[]","internalType":"struct SpentItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"consideration","type":"tuple[]","internalType":"struct ReceivedItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address payable"}]}],"stateMutability":"view"},{"type":"function","name":"ratifyOrder","inputs":[{"name":"offer","type":"tuple[]","internalType":"struct SpentItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"consideration","type":"tuple[]","internalType":"struct ReceivedItem[]","components":[{"name":"itemType","type":"uint8","internalType":"enum ItemType"},{"name":"token","type":"address","internalType":"address"},{"name":"identifier","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address payable"}]},{"name":"context","type":"bytes","internalType":"bytes"},{"name":"orderHashes","type":"bytes32[]","internalType":"bytes32[]"},{"name":"contractNonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"ratifyOrderMagicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"generateOrder(address,(uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256)[],bytes)":"98919765","getSeaportMetadata()":"2e778efc","previewOrder(address,address,(uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256)[],bytes)":"582d4241","ratifyOrder((uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256,address)[],bytes,bytes32[],uint256)":"f4dd92ce","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SpentItem[]\",\"name\":\"minimumReceived\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SpentItem[]\",\"name\":\"maximumSpent\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"generateOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SpentItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSeaportMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"internalType\":\"struct Schema[]\",\"name\":\"schemas\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fulfiller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SpentItem[]\",\"name\":\"minimumReceived\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SpentItem[]\",\"name\":\"maximumSpent\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"previewOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SpentItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct SpentItem[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct ReceivedItem[]\",\"name\":\"consideration\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"orderHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"contractNonce\",\"type\":\"uint256\"}],\"name\":\"ratifyOrder\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"ratifyOrderMagicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"generateOrder(address,(uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256)[],bytes)\":{\"details\":\"Generates an order with the specified minimum and maximum spent      items, and optional context (supplied as extraData).\",\"params\":{\"context\":\"Additional context of the order.\",\"fulfiller\":\"The address of the fulfiller.\",\"maximumSpent\":\"The maximum items the caller is willing to spend.\",\"minimumReceived\":\"The minimum items that the caller is willing to                        receive.\"},\"returns\":{\"consideration\":\"A tuple containing the consideration items.\",\"offer\":\"        A tuple containing the offer items.\"}},\"getSeaportMetadata()\":{\"details\":\"Gets the metadata for this contract offerer.\",\"returns\":{\"name\":\"   The name of the contract offerer.\",\"schemas\":\"The schemas supported by the contract offerer.\"}},\"previewOrder(address,address,(uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256)[],bytes)\":{\"details\":\"View function to preview an order generated in response to a minimum      set of received items, maximum set of spent items, and context      (supplied as extraData).\",\"params\":{\"caller\":\"The address of the caller (e.g. Seaport).\",\"context\":\"Additional context of the order.\",\"fulfiller\":\"The address of the fulfiller (e.g. the account                        calling Seaport).\",\"maximumSpent\":\"The maximum items the caller is willing to spend.\",\"minimumReceived\":\"The minimum items that the caller is willing to                        receive.\"},\"returns\":{\"consideration\":\"A tuple containing the consideration items.\",\"offer\":\"        A tuple containing the offer items.\"}},\"ratifyOrder((uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256,address)[],bytes,bytes32[],uint256)\":{\"details\":\"Ratifies an order with the specified offer, consideration, and      optional context (supplied as extraData).\",\"params\":{\"consideration\":\"The consideration items.\",\"context\":\"Additional context of the order.\",\"contractNonce\":\"The nonce of the contract.\",\"offer\":\"The offer items.\",\"orderHashes\":\"The hashes to ratify.\"},\"returns\":{\"ratifyOrderMagicValue\":\"The magic value returned by the contract                               offerer.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. This function call must use less than 30 000 gas.\"}},\"title\":\"ContractOffererInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains the minimum interfaces needed to interact with a contract         offerer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/seaport-types/src/interfaces/ContractOffererInterface.sol\":\"ContractOffererInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@merkle-generator/=lib/merkle-proof-generator/src/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/\",\":@safe-contracts/=lib/safe-contracts/contracts/\",\":@scripts/=scripts/\",\":@seaport-core/=lib/seaport-core/src/\",\":@seaport-sol/=lib/seaport-sol/src/\",\":@seaport-types/=lib/seaport-types/src/\",\":@solady/=lib/Solady/src/\",\":@src/=src/\",\":@test/=test/\",\":Solady/=lib/Solady/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/seaport-sol/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/\",\":seaport-core/=lib/seaport-core/\",\":seaport-sol/=lib/seaport-sol/src/\",\":seaport-types/=lib/seaport-types/\",\":seaport/=lib/seaport-sol/lib/seaport/contracts/\",\":solady/=lib/seaport-sol/lib/solady/\",\":solarray/=lib/seaport-sol/lib/solarray/src/\",\":solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/\"]},\"sources\":{\"lib/seaport-types/src/helpers/PointerLibraries.sol\":{\"keccak256\":\"0xf9106392d8616040b61748bce0ff35856c4a3eba5eb5eb269eaeb97747fe40e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://046f05ce4d4428d3ca6264ab03e1b6cee5751776f02cc87d66d11ee479a42992\",\"dweb:/ipfs/Qme5bKudPZWxH4DYDLQE2sD23xNVbQH4NjrL6pBacv54FD\"]},\"lib/seaport-types/src/interfaces/ContractOffererInterface.sol\":{\"keccak256\":\"0xb8e8bdf318dfb7e3a985ff5e3b41a58b183706f9abb09bc97b03479fce2743be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3050796feef63943414f3b799269287c77e63f0151733de819a28a867fb677a9\",\"dweb:/ipfs/QmcQesS7LksoBa16c9q5pEVJdbnadogVSsyvDzd6J4YEpX\"]},\"lib/seaport-types/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x5d9b69ca598a236e397a4b849c2b800f33206fcc1a949e237fbfc387f022020f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe1c38152c5dfcf05f4157458bda1d4c4815f5b4ba1b442b42502442bd3466c2\",\"dweb:/ipfs/QmdhPePHcAnEpSotrwbr4r4aGJZuw3Wcjqz2QUmiNrhLr1\"]},\"lib/seaport-types/src/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0xeb0de4edbad252c3227c59b66721978316202c4d31c5370a8669c4051984e345\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00451d1ceb616b7cccf0e4be073483d5c99fcc205fe6a1056ce35b8703be16e3\",\"dweb:/ipfs/QmbeoxgRcgwK18Vw1G1mVAFKMnYYT2oQp1idfazNicwncq\"]},\"lib/seaport-types/src/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0x05bc9ccb74c9fb4d073c9adc36da28a5a0ab961886fcd4a681ccb8d7eb74e0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://911be5f248b2ad47a24ca9949f4b8114db5432c7f2769650c0f3e4ea6bb0b17b\",\"dweb:/ipfs/QmdNmqhwc1UMxbCPXqe9FDua7negVWSGU5cPAWSbUTnKDV\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"fulfiller","type":"address"},{"internalType":"struct SpentItem[]","name":"minimumReceived","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct SpentItem[]","name":"maximumSpent","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"bytes","name":"context","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"generateOrder","outputs":[{"internalType":"struct SpentItem[]","name":"offer","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct ReceivedItem[]","name":"consideration","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"recipient","type":"address"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSeaportMetadata","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"struct Schema[]","name":"schemas","type":"tuple[]","components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bytes","name":"metadata","type":"bytes"}]}]},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"fulfiller","type":"address"},{"internalType":"struct SpentItem[]","name":"minimumReceived","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct SpentItem[]","name":"maximumSpent","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"bytes","name":"context","type":"bytes"}],"stateMutability":"view","type":"function","name":"previewOrder","outputs":[{"internalType":"struct SpentItem[]","name":"offer","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct ReceivedItem[]","name":"consideration","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"recipient","type":"address"}]}]},{"inputs":[{"internalType":"struct SpentItem[]","name":"offer","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"struct ReceivedItem[]","name":"consideration","type":"tuple[]","components":[{"internalType":"enum ItemType","name":"itemType","type":"uint8"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"identifier","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"recipient","type":"address"}]},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"bytes32[]","name":"orderHashes","type":"bytes32[]"},{"internalType":"uint256","name":"contractNonce","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"ratifyOrder","outputs":[{"internalType":"bytes4","name":"ratifyOrderMagicValue","type":"bytes4"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"generateOrder(address,(uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256)[],bytes)":{"details":"Generates an order with the specified minimum and maximum spent      items, and optional context (supplied as extraData).","params":{"context":"Additional context of the order.","fulfiller":"The address of the fulfiller.","maximumSpent":"The maximum items the caller is willing to spend.","minimumReceived":"The minimum items that the caller is willing to                        receive."},"returns":{"consideration":"A tuple containing the consideration items.","offer":"        A tuple containing the offer items."}},"getSeaportMetadata()":{"details":"Gets the metadata for this contract offerer.","returns":{"name":"   The name of the contract offerer.","schemas":"The schemas supported by the contract offerer."}},"previewOrder(address,address,(uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256)[],bytes)":{"details":"View function to preview an order generated in response to a minimum      set of received items, maximum set of spent items, and context      (supplied as extraData).","params":{"caller":"The address of the caller (e.g. Seaport).","context":"Additional context of the order.","fulfiller":"The address of the fulfiller (e.g. the account                        calling Seaport).","maximumSpent":"The maximum items the caller is willing to spend.","minimumReceived":"The minimum items that the caller is willing to                        receive."},"returns":{"consideration":"A tuple containing the consideration items.","offer":"        A tuple containing the offer items."}},"ratifyOrder((uint8,address,uint256,uint256)[],(uint8,address,uint256,uint256,address)[],bytes,bytes32[],uint256)":{"details":"Ratifies an order with the specified offer, consideration, and      optional context (supplied as extraData).","params":{"consideration":"The consideration items.","context":"Additional context of the order.","contractNonce":"The nonce of the contract.","offer":"The offer items.","orderHashes":"The hashes to ratify."},"returns":{"ratifyOrderMagicValue":"The magic value returned by the contract                               offerer."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@merkle-generator/=lib/merkle-proof-generator/src/","@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/seaport-sol/lib/seaport/lib/solmate/","@safe-contracts/=lib/safe-contracts/contracts/","@scripts/=scripts/","@seaport-core/=lib/seaport-core/src/","@seaport-sol/=lib/seaport-sol/src/","@seaport-types/=lib/seaport-types/src/","@solady/=lib/Solady/src/","@src/=src/","@test/=test/","Solady/=lib/Solady/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","murky/=lib/seaport-sol/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","safe-contracts/=lib/safe-contracts/","seaport-core/=lib/seaport-core/","seaport-sol/=lib/seaport-sol/src/","seaport-types/=lib/seaport-types/","seaport/=lib/seaport-sol/lib/seaport/contracts/","solady/=lib/seaport-sol/lib/solady/","solarray/=lib/seaport-sol/lib/solarray/src/","solmate/=lib/seaport-sol/lib/seaport/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/seaport-types/src/interfaces/ContractOffererInterface.sol":"ContractOffererInterface"},"evmVersion":"paris","libraries":{}},"sources":{"lib/seaport-types/src/helpers/PointerLibraries.sol":{"keccak256":"0xf9106392d8616040b61748bce0ff35856c4a3eba5eb5eb269eaeb97747fe40e7","urls":["bzz-raw://046f05ce4d4428d3ca6264ab03e1b6cee5751776f02cc87d66d11ee479a42992","dweb:/ipfs/Qme5bKudPZWxH4DYDLQE2sD23xNVbQH4NjrL6pBacv54FD"],"license":"MIT"},"lib/seaport-types/src/interfaces/ContractOffererInterface.sol":{"keccak256":"0xb8e8bdf318dfb7e3a985ff5e3b41a58b183706f9abb09bc97b03479fce2743be","urls":["bzz-raw://3050796feef63943414f3b799269287c77e63f0151733de819a28a867fb677a9","dweb:/ipfs/QmcQesS7LksoBa16c9q5pEVJdbnadogVSsyvDzd6J4YEpX"],"license":"MIT"},"lib/seaport-types/src/interfaces/IERC165.sol":{"keccak256":"0x5d9b69ca598a236e397a4b849c2b800f33206fcc1a949e237fbfc387f022020f","urls":["bzz-raw://fe1c38152c5dfcf05f4157458bda1d4c4815f5b4ba1b442b42502442bd3466c2","dweb:/ipfs/QmdhPePHcAnEpSotrwbr4r4aGJZuw3Wcjqz2QUmiNrhLr1"],"license":"MIT"},"lib/seaport-types/src/lib/ConsiderationEnums.sol":{"keccak256":"0xeb0de4edbad252c3227c59b66721978316202c4d31c5370a8669c4051984e345","urls":["bzz-raw://00451d1ceb616b7cccf0e4be073483d5c99fcc205fe6a1056ce35b8703be16e3","dweb:/ipfs/QmbeoxgRcgwK18Vw1G1mVAFKMnYYT2oQp1idfazNicwncq"],"license":"MIT"},"lib/seaport-types/src/lib/ConsiderationStructs.sol":{"keccak256":"0x05bc9ccb74c9fb4d073c9adc36da28a5a0ab961886fcd4a681ccb8d7eb74e0ed","urls":["bzz-raw://911be5f248b2ad47a24ca9949f4b8114db5432c7f2769650c0f3e4ea6bb0b17b","dweb:/ipfs/QmdNmqhwc1UMxbCPXqe9FDua7negVWSGU5cPAWSbUTnKDV"],"license":"MIT"}},"version":1},"id":147}